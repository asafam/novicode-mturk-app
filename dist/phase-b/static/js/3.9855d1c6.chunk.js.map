{
    "version": 3,
    "sources": [
        "utterances5/containers/home/Home.js",
        "utterances5/components/help/Help.js",
        "utterances5/containers/instructions/Instructions.js",
        "utterances5/components/device/Device.js",
        "utterances5/utils/utils.js",
        "utterances5/data/data.js",
        "utterances5/components/example/Example.js",
        "utterances5/containers/simple/Simple.js",
        "utterances5/containers/complex/Complex.js",
        "utterances5/containers/Modal.js",
        "utterances5/containers/utterance/Utterance.js",
        "utterances5/containers/ThankYou.js",
        "utterances5/App.js",
        "utterances5/index.js"
    ],
    "names": [
        "Home",
        "onClickSkip",
        "this",
        "props",
        "className",
        "type",
        "onClick",
        "React",
        "Component",
        "Instructions",
        "title",
        "desc",
        "requirements",
        "getRequirments",
        "map",
        "requirement",
        "i",
        "onClickNext",
        "onClickBack",
        "Device",
        "state",
        "selectAppIndex",
        "handleClickApp",
        "bind",
        "handleCloseApp",
        "e",
        "preventDefault",
        "showAppHelp",
        "index",
        "parseInt",
        "currentTarget",
        "getAttribute",
        "setState",
        "appsInRow",
        "apps",
        "html",
        "length",
        "push",
        "app",
        "disableClickApps",
        "renderAppsGrid",
        "renderShowApp",
        "shuffleArray",
        "array",
        "counter",
        "Math",
        "floor",
        "random",
        "temp",
        "getApps",
        "shuffle",
        "excludedApps",
        "limit",
        "id",
        "name",
        "icon",
        "about",
        "results",
        "filter",
        "indexOf",
        "slice",
        "caption",
        "find",
        "a",
        "description",
        "examples",
        "hasExamples",
        "Boolean",
        "Carousel",
        "variant",
        "interval",
        "example",
        "Item",
        "getIcon",
        "Simple",
        "showExamples",
        "getTitle",
        "getDescription",
        "getExamples",
        "Complex",
        "minimalDescription",
        "MyVerticallyCenteredModal",
        "Modal",
        "size",
        "animation",
        "centered",
        "Header",
        "Title",
        "Body",
        "children",
        "Footer",
        "Button",
        "onHide",
        "AppModal",
        "show",
        "Utterance",
        "utterance",
        "context",
        "handleClickNext",
        "handleClickHelp",
        "handleTextAreaChange",
        "prevProps",
        "prevState",
        "event",
        "utteranceLimit",
        "disableTextOverflow",
        "onUtteranceChange",
        "target",
        "value",
        "newUtterance",
        "conjunctionWords",
        "excludedTerms",
        "conjunctionWords2",
        "reduce",
        "prevVal",
        "w",
        "concat",
        "hasUtterance",
        "trim",
        "hasConjunctionWords",
        "conjunctionWordsIncluded",
        "word",
        "RegExp",
        "test",
        "excludedTermsFound",
        "term",
        "split",
        "valid",
        "errorMessage",
        "join",
        "s",
        "isUtteranceValid",
        "showHelp",
        "requiredFlowsInUtterance",
        "requiredFlowInUtterance",
        "excludedTerm",
        "onSubmit",
        "handleSubmit",
        "noValidate",
        "style",
        "display",
        "rows",
        "onChange",
        "placeholder",
        "required",
        "Selections",
        "feedback",
        "handleClickBack",
        "onFeedbackChange",
        "SCREENS",
        "App",
        "intents",
        "constraints",
        "currentScreen",
        "intentsSelections",
        "Array",
        "constraintsSelections",
        "workerResponses",
        "handleFeedbackChange",
        "handleUtteranceChange",
        "handleSelectIntent",
        "handleSelectConstraint",
        "handleSelection",
        "workerResponsesValues",
        "workerResponse",
        "selectedIntents",
        "selectedConstraints",
        "intentsValue",
        "constraintsValue",
        "intentsAnnotationsValue",
        "substring",
        "constraintsAnnotationsValue",
        "workerResponseValue",
        "intentsAnnotations",
        "constraintsAnnotations",
        "feedbackValue",
        "document",
        "querySelector",
        "onsubmit",
        "getElementById",
        "JSON",
        "stringify",
        "submit",
        "submitToMTurk",
        "nextScreen",
        "window",
        "scrollTo",
        "itemsCounter",
        "currentSelectionIndex",
        "maxUtterances",
        "maxLength",
        "minIntents",
        "minConstraints",
        "minConjunctionWords",
        "onClickExample",
        "onClickHelp",
        "ThankYou",
        "displayedScreen",
        "getDisplayedScreen",
        "getData",
        "attribute",
        "defaultValue",
        "startsWith",
        "verification",
        "quantifiers",
        "Root",
        "quantifierIdx"
    ],
    "mappings": "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",
    "file": "static/js/3.9855d1c6.chunk.js",
    "sourcesContent": [
        "import React from 'react';\nimport './Home.scss';\n\n\nexport default class Home extends React.Component {\n    render() {\n        const { onClickSkip } = this.props;\n\n        return (\n            <div className=\"home\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"header text-center\">\n                                <h1>Virtual Assistant++</h1>\n                                <h3><span className=\"bi bi-robot\" /></h3>\n                                <p>Your goal in this task is to write Complex\n                                    Commands to the perfect virtual assistant\n                                    (better than Google assistant, Alexa or Siri)</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col\">\n                            <div className=\"mt-4 mb-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={onClickSkip}>\n                                    Start\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}",
        "import React from \"react\";\nimport \"./Help.scss\";\n\nexport default class Instructions extends React.Component {\n    getRequirments() {\n        return [\n            {\n                title: \"Relevant\",\n                desc: \"The different parts in your complex command should be related to one another. \",\n            },\n            {\n                title: \"Can be done by a virtual assistant\",\n                desc: \"Think of instructions that are possible for a virtual assistant to perform. As a rule of thumb, if a virtual assistant (like Siri or Alexa) can do each of the simple commands that make the complex command, then it is valid.\",\n            },\n            {\n                title: \"Useful\",\n                desc: \"Think about real-life scenarios where you could use this ideal virtual assistance in your favor.\",\n            },\n            {\n                title: \"Diverse\",\n                desc: \"Don’t repeat yourself. Think of commands in different apps or different commands in the same app. \",\n            },\n            {\n                title: \"DRY (Don't Repreat Yourself)\",\n                desc: 'If you use multiple equal expressions in your command: for example, a time (5 pm) or a name of a person (Bill), use different nouns to describe these expressions (for exmaple, \"at that time\" or \"he\" accordingly).',\n            },\n            {\n                title: \"Unambiguous\",\n                desc: \"A person can clearly understand the intents within your instruction.\",\n            },\n        ];\n    }\n\n    render() {\n        const requirements = this.getRequirments();\n\n        return (\n            <div className=\"instructions\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"header text-center\">\n                            <h1 className=\"text-center\">\n                                <span className=\"title-small\">Your task:</span>\n                                Write a Complex Command\n                            </h1>\n                            <p>\n                                Now, you think of a complex command you can ask\n                                your virtual assistant that involves multiple\n                                apps (or the same app multiple times).\n                            </p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h3>Requirements</h3>\n                        <ol className=\"requirements\">\n                            {requirements.map((requirement, i) => (\n                                <li className=\"requirement\" key={i}>\n                                    <div className=\"requirement-title bold\">\n                                        {requirement[\"title\"]}\n                                    </div>\n                                    <div className=\"requirement-desc\">\n                                        {requirement[\"desc\"]}\n                                    </div>\n                                </li>\n                            ))}\n                        </ol>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n",
        "import React from 'react';\nimport Help from '../../components/help/Help';\nimport './Instructions.scss';\n\n\nexport default class Instructions extends React.Component {\n\n    render() {\n        const { onClickNext, onClickBack } = this.props;\n\n        return (\n            <div className=\"instructions\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Help />\n                    </div>\n\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"actions bottom mt-4 mb-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={onClickNext}><i className=\"bi bi-chevron-right\" /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}",
        "/**\n * https://www.w3schools.com/howto/howto_css_devices.asp\n */\n\nimport React from \"react\";\nimport \"./Device.scss\";\n\nexport default class Device extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectAppIndex: null,\n        };\n        this.handleClickApp = this.handleClickApp.bind(this);\n        this.handleCloseApp = this.handleCloseApp.bind(this);\n    }\n\n    handleClickApp(e) {\n        e.preventDefault();\n        const { showAppHelp } = this.props;\n        if (!showAppHelp) {\n            this.setState({ selectAppIndex: null });\n            return;\n        }\n\n        const index = parseInt(e.currentTarget.getAttribute(\"data-app-index\"));\n        this.setState({ selectAppIndex: index });\n    }\n\n    handleCloseApp(e) {\n        e.preventDefault();\n        this.setState({ selectAppIndex: null });\n    }\n\n    renderAppsGrid(appsInRow = 3) {\n        const { apps } = this.props;\n\n        let html = [];\n        for (let i = 0; i < apps.length; i += appsInRow) {\n            html.push(\n                <div className=\"row\" key={i}>\n                    <div\n                        className=\"col-sm-4 app\"\n                        data-app-index={i}\n                        onClick={this.handleClickApp}\n                    >\n                        <div className=\"app-icon text-center\">\n                            <span className={`bi bi-${apps[i][\"icon\"]}`} />\n                        </div>\n                        <div className=\"app-name text-center\">\n                            {apps[i][\"name\"]}\n                        </div>\n                    </div>\n                    {i + 1 < apps.length && (\n                        <div\n                            className=\"col-sm-4 app\"\n                            data-app-index={i + 1}\n                            onClick={this.handleClickApp}\n                        >\n                            <div className=\"app-icon text-center\">\n                                <span\n                                    className={`bi bi-${apps[i + 1][\"icon\"]}`}\n                                />\n                            </div>\n                            <div className=\"app-name text-center\">\n                                {apps[i + 1][\"name\"]}\n                            </div>\n                        </div>\n                    )}\n                    {i + 2 < apps.length && (\n                        <div\n                            className=\"col-sm-4 app\"\n                            data-app-index={i + 2}\n                            onClick={this.handleClickApp}\n                        >\n                            <div className=\"app-icon text-center\">\n                                <span\n                                    className={`bi bi-${apps[i + 2][\"icon\"]}`}\n                                />\n                            </div>\n                            <div className=\"app-name text-center\">\n                                {apps[i + 2][\"name\"]}\n                            </div>\n                        </div>\n                    )}\n                </div>\n            );\n        }\n        return <div className=\"apps\">{html}</div>;\n    }\n\n    renderShowApp(index) {\n        const { apps } = this.props;\n        const app = apps[index];\n\n        return (\n            <div className=\"app-help\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"app-help-content\">\n                            <div\n                                className=\"close-icon\"\n                                onClick={this.handleCloseApp}\n                            >\n                                <span className=\"bi bi-x-circle\" />\n                            </div>\n                            <h3>\n                                <span className={`bi bi-${app[\"icon\"]}`} />\n                                {app[\"name\"]}\n                            </h3>\n                            <p>{app[\"about\"]}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        const { disableClickApps } = this.props;\n        const { selectAppIndex } = this.state;\n\n        return (\n            <div className=\"device\">\n                <div className=\"smartphone\">\n                    <div className=\"content\">\n                        <div className=\"apps\">\n                            <div className=\"container\">\n                                <div>{this.renderAppsGrid()}</div>\n                            </div>\n                        </div>\n                        {selectAppIndex !== null && (\n                            <div className=\"app-help\">\n                                {this.renderShowApp(selectAppIndex)}\n                            </div>\n                        )}\n                    </div>\n                </div>\n                {!disableClickApps && (\n                    <div className=\"device-help text-center\">\n                        Click any of the apps for more information\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n",
        "\n\nexport const shuffleArray = (array) => {\n    let counter = array.length;\n\n    // While there are elements in the array\n    while (counter > 0) {\n        // Pick a random index\n        let index = Math.floor(Math.random() * counter);\n\n        // Decrease counter by 1\n        counter--;\n\n        // And swap the last element with it\n        let temp = array[counter];\n        array[counter] = array[index];\n        array[index] = temp;\n    }\n\n    return array;\n};",
        "import { shuffleArray } from \"../utils/utils\";\n\nexport const getApps = (shuffle = false, excludedApps = [], limit = 0) => {\n    const apps = [\n        {\n            id: \"navigation\",\n            name: \"Navigation\",\n            icon: \"car-front\",\n            about: \"You can find the best routes based on real-time traffic, accident and road conditions. Know when you will arrive and when to leave to get to places on-time.\",\n        },\n        {\n            id: \"weather\",\n            name: \"Weather\",\n            icon: \"cloud-sun\",\n            about: \"You can get detailed local forecast & weather forecast world wide, the app provides the current temperature in Celsius and Fahrenheit, sunrise and sunset time according to city time zone.\",\n        },\n        {\n            id: \"calendar\",\n            name: \"Calendar\",\n            icon: \"calendar-date\",\n            about: \"You can schedule meetings and events, get reminders about upcoming activities and check your availability.\",\n        },\n        {\n            id: \"reminders\",\n            name: \"Reminders\",\n            icon: \"bookmark\",\n            about: \"You can use it for all of life's to-dos, including grocery lists, projects at work, or anything else you want to track\",\n        },\n        {\n            id: \"messages\",\n            name: \"Messages\",\n            icon: \"chat\",\n            about: \"Send texts, photos, videos, documents, stickers, Memoji, and more to contacts.\",\n        },\n        {\n            id: \"music\",\n            name: \"Music\",\n            icon: \"music-note-beamed\",\n            about: \"Play your favorites songs and albums. Listen to the music you love, and discover new music and podcasts.\",\n        },\n        {\n            id: \"clock\",\n            name: \"Clock\",\n            icon: \"alarm\",\n            about: \"Set regular alarms for any time of day and have them repeat on one or more days of the week. You can also use the timer to count down from a specified time. You can also use the it to measure the duration of an event. Start the timer, pause it, stop it and restart it.\",\n        },\n        {\n            id: \"mail\",\n            name: \"Mail\",\n            icon: \"envelope\",\n            about: \"You can send and receive message. You can also archive, delete, flag, or mark messages as read or unread.\",\n        },\n        {\n            id: \"home\",\n            name: \"Smart Home\",\n            icon: \"house\",\n            about: \"Easily control your smart home accessories from your mobile device. Turn off the lights, see who's at the front door, adjust your living room temperature, turn up the music, and so much more.\",\n        },\n        {\n            id: \"events\",\n            name: \"Events & Tickets\",\n            icon: \"ticket-perforated\",\n            about: \"Find out about the the best art and entertainment, food and drink, attractions, and immediately buy and sell tickets to these events.\",\n        },\n        {\n            id: \"shopping\",\n            name: \"Shopping\",\n            icon: \"cart\",\n            about: \"You can get access to online stores (like Amazon), search for stuff to buy, see recommendations, compare prices, look up products, check on your orders, manage subscriptions\",\n        },\n        {\n            id: \"map\",\n            name: \"Map & Places\",\n            icon: \"pin-map\",\n            about: \"Look up information about places, including hours, photos, ratings, and reviews. Search and browse by category, including food, drink, shopping, and more.\",\n        },\n    ];\n\n    let results = apps;\n\n    if (shuffle) {\n        results = shuffleArray(apps);\n    }\n\n    if (excludedApps && excludedApps.length > 0) {\n        results = results.filter((app) => excludedApps.indexOf(app.id) === -1);\n    }\n\n    if (limit > 0) {\n        results = results.slice(0, limit);\n    }\n\n    return results;\n};\n",
        "import React from \"react\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport Device from \"../device/Device\";\nimport { getApps } from \"../../data/data.js\";\nimport \"./Example.scss\";\n\nexport default class Home extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            apps: getApps(true, props.excludedApps),\n        };\n    }\n\n    getIcon(caption) {\n        const { apps } = this.state;\n        const app = apps.find((a) => a[\"name\"] === caption);\n        const icon = app && app[\"icon\"];\n        return icon;\n    }\n\n    render() {\n        const { title, description, examples, showAppHelp } = this.props;\n        const { apps } = this.state;\n        const hasExamples = Boolean(examples) && examples.length > 0;\n\n        return (\n            <div className=\"example\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"header text-center\">\n                            <h1>{title}</h1>\n                            <div>{description}</div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Device showAppHelp={showAppHelp} apps={apps} />\n                    </div>\n                    {hasExamples && (\n                        <div className=\"col align-self-center\">\n                            <h5 className=\"examples-header\">Examples:</h5>\n                            <div className=\"card card-block\">\n                                <Carousel variant=\"dark\" interval=\"10000\">\n                                    {examples.map((example, i) => (\n                                        <Carousel.Item\n                                            className=\"instruction-example positive-example\"\n                                            key={i}\n                                        >\n                                            <div className=\"vertical-center-container\">\n                                                <div className=\"vertical-center\">\n                                                    <div className=\"example-title utterance-text text-center\">\n                                                        {example[\"title\"]}\n                                                    </div>\n                                                    {example[\"caption\"] && (\n                                                        <div className=\"example-caption utterance-text text-center\">\n                                                            {this.getIcon(\n                                                                example[\n                                                                    \"caption\"\n                                                                ]\n                                                            ) && (\n                                                                <span\n                                                                    className={`bi bi-${this.getIcon(\n                                                                        example[\n                                                                            \"caption\"\n                                                                        ]\n                                                                    )}`}\n                                                                />\n                                                            )}\n                                                            {example[\"caption\"]}\n                                                            <span />\n                                                        </div>\n                                                    )}\n                                                </div>\n                                            </div>\n                                        </Carousel.Item>\n                                    ))}\n                                </Carousel>\n                            </div>\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n",
        "import React from \"react\";\nimport Example from \"../../components/example/Example\";\nimport \"./Simple.scss\";\n\nexport default class Simple extends React.Component {\n    getTitle() {\n        return \"Simple commands\";\n    }\n\n    getDescription() {\n        return (\n            <p>\n                You are given a mobile device with the following apps. You can\n                ask your virtual assistant to perform{\" \"}\n                <span className=\"bold\">Simple commands</span> using these apps.\n            </p>\n        );\n    }\n\n    getExamples() {\n        return [\n            { title: \"Remind me at 2 pm to call dad\", caption: \"Reminders\" },\n            {\n                title: \"Send a message to Louise and ask if I left my wallet in her car.\",\n                caption: \"Messages\",\n            },\n            {\n                title: \"If I leave Shakespeare in the Park at 6 pm, when will I get home?\",\n                caption: \"Map & Navigation\",\n            },\n            {\n                title: \"Is it going to snow through the spring in upstate new york?\",\n                caption: \"Weather\",\n            },\n        ];\n    }\n\n    render() {\n        const {\n            showExamples,\n            showAppHelp,\n            excludedApps,\n            onClickNext,\n            onClickBack,\n        } = this.props;\n        const title = this.getTitle();\n        const description = this.getDescription();\n        const examples = showExamples ? this.getExamples() : null;\n\n        return (\n            <div className=\"simple\">\n                <div className=\"container\">\n                    <Example\n                        title={title}\n                        description={description}\n                        examples={examples}\n                        showAppHelp={showAppHelp}\n                        excludedApps={excludedApps}\n                        onClickNext={onClickNext}\n                        onClickBack={onClickBack}\n                    />\n\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"actions bottom mt-4 mb-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-outline-secondary btn-lg px-4 gap-3\"\n                                    onClick={onClickBack}\n                                >\n                                    <i className=\"bi bi-chevron-left\" />\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary btn-lg px-4\"\n                                    onClick={onClickNext}\n                                >\n                                    <i className=\"bi bi-chevron-right\" />\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n",
        "import React from 'react';\nimport Example from '../../components/example/Example';\nimport './Complex.scss';\n\n\nexport default class Complex extends React.Component {\n\n    getTitle() {\n        return \"Complex commands\";\n    }\n\n    getDescription(minimalDescription = false) {\n        return (\n            <p>A <span className=\"bold\">Complex command</span> allows you\n                to request multiple simple commands in a <u>single</u> command from\n                your virtual assistant. {!minimalDescription && <span>Commands can be expressed in repetition,\n                    sequence and conditions.</span>}</p>\n        );\n    }\n\n    getExamples() {\n        return [\n            { title: \"Text coach Nick that I will be late and ask Lauren if I left my keys in her car\", caption: \"Sequence\" },\n            { title: \"Is there a Coldplay concert in the park in July, August or September?\", caption: \"Repetition\" },\n            { title: \"In case it will be hot tomorrow morning, text my sister that I will need to use my car at that time\", caption: \"Condition\" },\n            { title: \"As I leave now to Shakespeare in the Park let everyone on my friends list know if I will be late and block my calendar at that time\", caption: \"Condition, Repetition & Sequence\" },\n        ]\n    }\n\n    render() {\n        const { minimalDescription, showExamples, showAppHelp, excludedApps, onClickNext, onClickBack } = this.props;\n        const title = this.getTitle();\n        const description = this.getDescription(minimalDescription);\n        const examples = showExamples ? this.getExamples() : [];\n\n        return (\n            <div className=\"simple\">\n                <div className=\"container\">\n                    <Example title={title} description={description} examples={examples} excludedApps={excludedApps} showAppHelp={showAppHelp} onClickNext={onClickNext} onClickBack={onClickBack} />\n\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"actions bottom mt-4 mb-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={onClickNext}><i className=\"bi bi-chevron-right\" /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}",
        "import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Button } from 'react-bootstrap';\n\n\nconst MyVerticallyCenteredModal = (props) => {\n    return (\n        <Modal\n            {...props}\n            size=\"xl\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            animation={false}\n            centered\n        >\n            <Modal.Header>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    <div className=\"text-center\"><i className=\"bi bi-life-preserver\"></i></div>\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div>\n                    {props.children}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default class AppModal extends React.Component {\n    render() {\n        const { show, onHide, children } = this.props;\n\n        return (\n            <div className=\"help\">\n                <MyVerticallyCenteredModal show={show} onHide={onHide}>\n                    {children}\n                </MyVerticallyCenteredModal>\n            </div>\n        );\n    }\n}\n",
        "import React from \"react\";\nimport AppModal from \"../Modal\";\nimport Device from \"../../components/device/Device\";\nimport Help from \"../../components/help/Help\";\nimport { getApps } from \"../../data/data.js\";\nimport \"./Utterance.scss\";\n\nexport default class Utterance extends React.Component {\n    constructor(props) {\n        super(props);\n        const { utterance, context } = props;\n        this.state = {\n            utterance,\n            context: context,\n            apps: getApps(true, props.excludedApps),\n        };\n\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickHelp = this.handleClickHelp.bind(this);\n        this.handleTextAreaChange = this.handleTextAreaChange.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.utterance !== this.props.utterance) {\n            let { utterance } = this.props;\n            utterance = utterance || \"\";\n            this.setState({ utterance });\n        }\n    }\n\n    handleTextAreaChange(event) {\n        const {\n            index,\n            utteranceLimit,\n            disableTextOverflow,\n            onUtteranceChange,\n        } = this.props;\n        const { context } = this.state;\n        const utterance = event.target.value;\n        const newUtterance =\n            !disableTextOverflow || utterance.length <= utteranceLimit\n                ? utterance\n                : this.state.utterance || \"\";\n        this.setState({ utterance: newUtterance });\n        onUtteranceChange && onUtteranceChange(index, utterance, context);\n    }\n\n    isUtteranceValid() {\n        const { conjunctionWords, utteranceLimit, excludedTerms } = this.props;\n        const { utterance } = this.state;\n        const conjunctionWords2 = conjunctionWords.reduce(\n            (prevVal, w) => prevVal.concat(w[\"verification\"] || [w[\"display\"]]),\n            []\n        );\n        const hasUtterance = Boolean(utterance && utterance.trim().length > 0);\n        const hasConjunctionWords = Boolean(\n            conjunctionWords2 && conjunctionWords2.length > 0\n        );\n        const conjunctionWordsIncluded =\n            hasUtterance &&\n            hasConjunctionWords &&\n            conjunctionWords2.filter((word) =>\n                new RegExp(\"\\\\b\" + word + \"\\\\b\", \"i\").test(utterance)\n            ).length > 0;\n        const excludedTermsFound =\n            excludedTerms &&\n            excludedTerms.length > 0 &&\n            excludedTerms.filter((term) =>\n                new RegExp(\"\\\\b\" + term + \"\\\\b\", \"i\").test(utterance)\n            );\n\n        if (!hasUtterance || utterance.split(\" \").length <= 2) {\n            // the utterance is too short\n            this.setState({\n                valid: false,\n                errorMessage: <span>Please be more creative.</span>,\n            });\n            return false;\n        } else if (hasConjunctionWords && !conjunctionWordsIncluded) {\n            // none of the mandaroty conjunctionWords are included\n            this.setState({\n                valid: false,\n                errorMessage: (\n                    <span>\n                        Please use at least 1 of the following word:{\" \"}\n                        <strong>\n                            {conjunctionWords\n                                .map((w) => w[\"display\"])\n                                .join(\", \")}\n                        </strong>\n                        .\n                    </span>\n                ),\n            });\n            return false;\n        } else if (\n            (utterance.indexOf(\"?\") >= 0 &&\n                utterance.indexOf(\"?\") < utterance.length * 0.5) ||\n            utterance\n                .trim()\n                .split(\"?\")\n                .filter((s) => s.length > 0).length > 1\n        ) {\n            // the utterance has been phrased as multiple utterances\n            this.setState({\n                valid: false,\n                errorMessage: (\n                    <span>\n                        Please try to phrase the text as a{\" \"}\n                        <strong>single</strong> request (and not in multiple\n                        phrases).\n                    </span>\n                ),\n            });\n            return false;\n        } else if (utterance.length > utteranceLimit) {\n            // the utterance is too long\n            this.setState({\n                valid: false,\n                errorMessage: <span>Your text is too long!</span>,\n            });\n            return false;\n        } else if (\n            excludedTerms &&\n            excludedTerms.length > 0 &&\n            excludedTermsFound &&\n            excludedTermsFound.length > 0\n        ) {\n            this.setState({\n                valid: false,\n                errorMessage: (\n                    <span>\n                        Your text contains a term that should not be used:{\" \"}\n                        {excludedTermsFound.join(\", \")}\n                    </span>\n                ),\n            });\n        } else {\n            this.setState({ valid: true });\n            return true;\n        }\n    }\n\n    handleClickNext(event) {\n        event.preventDefault();\n\n        if (this.isUtteranceValid()) {\n            this.props.onClickNext();\n        }\n    }\n\n    handleClickHelp(event) {\n        this.setState({ showHelp: true });\n    }\n\n    render() {\n        const {\n            utteranceLimit,\n            excludedTerms,\n            requiredFlowsInUtterance,\n            showAppHelp,\n            onClickBack,\n        } = this.props;\n        const { utterance, valid, errorMessage, showHelp, apps } = this.state;\n\n        if (showHelp) {\n            return (\n                <AppModal\n                    show={showHelp}\n                    onHide={() => this.setState({ showHelp: false })}\n                >\n                    <Help />\n                </AppModal>\n            );\n        }\n\n        return (\n            <div className=\"utterance px-4 py-5 my-5\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"header text-center\">\n                                <h1 className=\"text-center\">\n                                    <span className=\"title-small\">\n                                        Your task:\n                                    </span>\n                                    Write a Complex Command\n                                </h1>\n                                <p>\n                                    Follow the requirements and write a complex\n                                    command to your virtual assistant. Use the\n                                    following apps in your request.\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-3 mb-3\">\n                        <div className=\"col\">\n                            <Device showAppHelp={showAppHelp} apps={apps} />\n                        </div>\n                        <div className=\"col align-self-center\">\n                            {requiredFlowsInUtterance &&\n                                requiredFlowsInUtterance.length > 0 && (\n                                    <div className=\"row required-flows-in-utterance\">\n                                        <p>\n                                            Your complex command should express\n                                            at least one of the following:\n                                        </p>\n                                        <div>\n                                            {requiredFlowsInUtterance.map(\n                                                (\n                                                    requiredFlowInUtterance,\n                                                    i\n                                                ) => (\n                                                    <span\n                                                        className=\"required-flow-in-utterance\"\n                                                        key={i}\n                                                    >\n                                                        {\n                                                            requiredFlowInUtterance\n                                                        }\n                                                    </span>\n                                                )\n                                            )}\n                                        </div>\n                                    </div>\n                                )}\n\n                            {excludedTerms && excludedTerms.length > 0 && (\n                                <div className=\"row excluded-terms\">\n                                    <p>\n                                        <b>Do not</b> use any of the following\n                                        words and terms in your command:\n                                    </p>\n                                    <div>\n                                        {excludedTerms.map(\n                                            (excludedTerm, i) => (\n                                                <span\n                                                    className=\"excluded-term\"\n                                                    key={i}\n                                                >\n                                                    {excludedTerm}\n                                                </span>\n                                            )\n                                        )}\n                                    </div>\n                                </div>\n                            )}\n\n                            <div className=\"card mt-4\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"text-center\">\n                                        <span className=\"intent-icon bi bi-keyboard\" />\n                                        Write here\n                                    </h3>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <form\n                                                className=\"g-3 needs-validation pt-1\"\n                                                onSubmit={this.handleSubmit}\n                                                noValidate\n                                            >\n                                                <div className=\"has-validation\">\n                                                    <label\n                                                        className=\"form-label\"\n                                                        style={{\n                                                            display: \"none\",\n                                                        }}\n                                                    >\n                                                        Write a complex command\n                                                    </label>\n                                                    <textarea\n                                                        className={`input-textarea utterance-text form-control mb-3 ${\n                                                            (valid === true &&\n                                                                \"is-valid\") ||\n                                                            (valid === false &&\n                                                                \"is-invalid\")\n                                                        }`}\n                                                        rows=\"5\"\n                                                        value={utterance}\n                                                        type=\"text\"\n                                                        id=\"utterance\"\n                                                        aria-describedby=\"help\"\n                                                        onChange={\n                                                            this\n                                                                .handleTextAreaChange\n                                                        }\n                                                        placeholder=\"Type your complex command here...\"\n                                                        required\n                                                    ></textarea>\n                                                    <div className=\"p-1 m-1\">\n                                                        <span\n                                                            className={\n                                                                (\n                                                                    utterance ||\n                                                                    \"\"\n                                                                ).length >\n                                                                utteranceLimit\n                                                                    ? \"text-danger\"\n                                                                    : \"\"\n                                                            }\n                                                        >\n                                                            {\n                                                                (\n                                                                    utterance ||\n                                                                    \"\"\n                                                                ).length\n                                                            }\n                                                        </span>{\" \"}\n                                                        / {utteranceLimit}\n                                                    </div>\n                                                    <div className=\"invalid-feedback\">\n                                                        {errorMessage}\n                                                    </div>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"actions bottom mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-outline-secondary btn-lg px-4 gap-3\"\n                                    onClick={onClickBack}\n                                >\n                                    <i className=\"bi bi-chevron-left\" />\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary btn-lg px-4\"\n                                    onClick={this.handleClickNext}\n                                >\n                                    <i className=\"bi bi-chevron-right\" />\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"actions float\">\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-outline-secondary btn-lg px-4 gap-3\"\n                        onClick={this.handleClickHelp}\n                    >\n                        <i className=\"bi bi-life-preserver\" />\n                        Help\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n",
        "import React from 'react';\n\nclass Selections extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            feedback: \"\"\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleClickBack = this.handleClickBack.bind(this);\n        this.handleTextAreaChange = this.handleTextAreaChange.bind(this);\n    }\n\n    handleTextAreaChange(event) {\n        const { onFeedbackChange } = this.props;\n        const feedback = event.target.value;\n        this.setState({ feedback });\n        onFeedbackChange && onFeedbackChange(feedback);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const { feedback } = this.state;\n        this.props.onSubmit(feedback);\n    }\n\n    handleClickBack(event) {\n        event.preventDefault();\n        this.props.onClickBack();\n    }\n\n    render() {\n        const { feedback } = this.state;\n\n        return (\n            <div className=\"thank-you\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h2 className=\"text-muted text-center mb-3\">Thank You.</h2>\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-3 mb-3\">\n                        <div className=\"col\">\n                            <div className=\"card mt-4\">\n                                <div className=\"card-header\">\n                                    <h4 className=\"text-center\"><span className=\"intent-icon bi bi-megaphone\" />Have any feedback?</h4>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <form className=\"g-3 needs-validation pt-1\" onSubmit={this.handleSubmit} noValidate>\n                                                <div className=\"has-validation\">\n                                                    <textarea className=\"feedback-textarea form-control mb-3\"\n                                                        rows=\"3\" value={feedback} type=\"text\" id=\"feedback-text\" aria-describedby=\"help\"\n                                                        onChange={this.handleTextAreaChange} placeholder=\"Enter your feedback here...\" required>\n                                                    </textarea>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div >\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={this.handleSubmit}>Finish</button>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Selections;",
        "import React from \"react\";\nimport Home from \"./containers/home/Home\";\nimport Instructions from \"./containers/instructions/Instructions\";\nimport Simple from \"./containers/simple/Simple\";\nimport Complex from \"./containers/complex/Complex\";\nimport Utterance from \"./containers/utterance/Utterance\";\nimport ThankYou from \"./containers/ThankYou\";\nimport \"./App.scss\";\n\nconst SCREENS = {\n    home: 1,\n    simple: 2,\n    complex: 3,\n    instructions: 4,\n    utterance: 5,\n    end: 6,\n};\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        const { intents, constraints } = props;\n        this.state = {\n            index: 0,\n            currentScreen: SCREENS.home,\n            intentsSelections: intents && new Array(intents.length),\n            constraintsSelections: constraints && new Array(constraints.length),\n            workerResponses: [],\n        };\n\n        this.handleClickBack = this.handleClickBack.bind(this);\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickHelp = this.handleClickHelp.bind(this);\n        this.handleFeedbackChange = this.handleFeedbackChange.bind(this);\n        this.handleUtteranceChange = this.handleUtteranceChange.bind(this);\n        this.handleSelectIntent = this.handleSelectIntent.bind(this);\n        this.handleSelectConstraint = this.handleSelectConstraint.bind(this);\n        this.handleSelection = this.handleSelection.bind(this);\n    }\n\n    submitToMTurk() {\n        const {\n            intents,\n            constraints,\n            excludedApps,\n            excludedTerms,\n            requiredFlowsInUtterance,\n        } = this.props;\n        const { workerResponses, feedback } = this.state;\n        const workerResponsesValues = [];\n        for (const i in workerResponses) {\n            const workerResponse = workerResponses[i];\n            const {\n                utterance,\n                context,\n                selectedIntents,\n                selectedConstraints,\n                intentsSelections,\n                constraintsSelections,\n            } = workerResponse;\n            const intentsValue =\n                selectedIntents &&\n                selectedIntents.map((index) => intents[index]).join(\" | \");\n            const constraintsValue =\n                selectedConstraints &&\n                selectedConstraints\n                    .map((index) => constraints[index])\n                    .join(\" | \");\n            const intentsAnnotationsValue =\n                selectedIntents &&\n                selectedIntents\n                    .map((index, i) =>\n                        utterance.substring(\n                            intentsSelections[i][0],\n                            intentsSelections[i][1]\n                        )\n                    )\n                    .join(\" | \");\n            const constraintsAnnotationsValue =\n                selectedConstraints &&\n                selectedConstraints\n                    .map((index, i) =>\n                        utterance.substring(\n                            constraintsSelections[i][0],\n                            constraintsSelections[i][1]\n                        )\n                    )\n                    .join(\" | \");\n            const workerResponseValue = {\n                utterance,\n                context,\n                excludedTerms,\n                excludedApps,\n                requiredFlowsInUtterance,\n                intents: intentsValue,\n                constraints: constraintsValue,\n                intentsAnnotations: intentsAnnotationsValue,\n                constraintsAnnotations: constraintsAnnotationsValue,\n            };\n            workerResponsesValues.push(workerResponseValue);\n        }\n        const feedbackValue = feedback;\n\n        document.querySelector(\"crowd-form\").onsubmit = () => {\n            if (document.getElementById(\"worker-responses\")) {\n                document.getElementById(\"worker-responses\").value =\n                    JSON.stringify(workerResponsesValues);\n                document.getElementById(\"worker-feedback\").value =\n                    feedbackValue;\n            }\n        };\n        document.querySelector(\"crowd-form\").submit();\n    }\n\n    handleClickNext() {\n        const { currentScreen } = this.state;\n\n        if (currentScreen === SCREENS.end) {\n            this.submitToMTurk(this.state);\n        } else {\n            const nextScreen = currentScreen + 1;\n            this.setState({ currentScreen: nextScreen });\n        }\n        window.scrollTo(0, 0);\n    }\n\n    handleClickBack() {\n        const { currentScreen } = this.state;\n\n        if (currentScreen !== SCREENS.home) {\n            const nextScreen = currentScreen - 1;\n            this.setState({ currentScreen: nextScreen });\n        }\n        window.scrollTo(0, 0);\n    }\n\n    handleClickHelp() {\n        this.setState({ showHelp: true });\n    }\n\n    handleFeedbackChange(feedback) {\n        this.setState({ feedback });\n    }\n\n    handleUtteranceChange(index, utterance, context) {\n        const { workerResponses } = this.state;\n        workerResponses[index] = {\n            ...workerResponses[index],\n            ...{\n                utterance,\n                context,\n                intentsSelections: [],\n                constraintsSelections: [],\n            },\n        };\n        this.setState({ workerResponses });\n    }\n\n    handleSelectIntent(index, itemsCounter) {\n        const { workerResponses } = this.state;\n        workerResponses[index] = {\n            ...workerResponses[index],\n            ...{ selectedIntents: itemsCounter, intentsSelections: [] },\n        };\n        this.setState({ workerResponses });\n    }\n\n    handleSelectConstraint(index, itemsCounter) {\n        const { workerResponses } = this.state;\n        workerResponses[index] = {\n            ...workerResponses[index],\n            ...{ selectedConstraints: itemsCounter, constraintsSelections: [] },\n        };\n        this.setState({ workerResponses });\n    }\n\n    handleSelection(\n        index,\n        intentsSelections,\n        constraintsSelections,\n        currentSelectionIndex\n    ) {\n        const { workerResponses } = this.state;\n        workerResponses[index] = {\n            ...workerResponses[index],\n            ...{\n                intentsSelections,\n                constraintsSelections,\n                currentSelectionIndex,\n            },\n        };\n        this.setState({ workerResponses });\n    }\n\n    /**\n     * Test variations:\n     * control: examples + explicit flow description\n     * A: explicit flow description\n     * B: n/a\n     * C: examples + explicit flow description + click apps\n     * D: explicit flow description + click apps\n     * @returns\n     */\n    getDisplayedScreen() {\n        const {\n            maxUtterances,\n            maxLength,\n            minIntents,\n            minConstraints,\n            conjunctionWords,\n            minConjunctionWords,\n            excludedTerms,\n            excludedApps,\n            requiredFlowsInUtterance,\n            showExamples,\n            showAppHelp,\n        } = this.props;\n        const { currentScreen, index, workerResponses } = this.state;\n        const { utterance, context } =\n            workerResponses.length > index ? workerResponses[index] : {};\n        const utteranceLimit = maxLength || 250;\n        const minimalDescription = false; //testVariation === 'B' || testVariation === 'D';\n\n        if (currentScreen === SCREENS.home) {\n            return (\n                <Home\n                    onClickExample={this.handleClickHelp}\n                    onClickSkip={this.handleClickNext}\n                />\n            );\n        } else if (currentScreen === SCREENS.simple) {\n            return (\n                <Simple\n                    showExamples={showExamples}\n                    showAppHelp={showAppHelp}\n                    excludedApps={excludedApps}\n                    onClickBack={this.handleClickBack}\n                    onClickNext={this.handleClickNext}\n                />\n            );\n        } else if (currentScreen === SCREENS.complex) {\n            return (\n                <Complex\n                    minimalDescription={minimalDescription}\n                    showExamples={showExamples}\n                    excludedApps={excludedApps}\n                    showAppHelp={showAppHelp}\n                    onClickBack={this.handleClickBack}\n                    onClickNext={this.handleClickNext}\n                />\n            );\n        } else if (currentScreen === SCREENS.instructions) {\n            return (\n                <Instructions\n                    onClickBack={this.handleClickBack}\n                    onClickNext={this.handleClickNext}\n                />\n            );\n        } else if (currentScreen === SCREENS.utterance) {\n            return (\n                <Utterance\n                    index={index}\n                    maxUtterances={maxUtterances}\n                    utterance={utterance}\n                    utteranceLimit={utteranceLimit}\n                    minIntents={minIntents}\n                    minConstraints={minConstraints}\n                    showAppHelp={showAppHelp}\n                    excludedTerms={excludedTerms}\n                    requiredFlowsInUtterance={requiredFlowsInUtterance}\n                    conjunctionWords={conjunctionWords}\n                    minConjunctionWords={minConjunctionWords}\n                    context={context}\n                    excludedApps={excludedApps}\n                    onUtteranceChange={this.handleUtteranceChange}\n                    onClickBack={this.handleClickBack}\n                    onClickHelp={this.handleClickHelp}\n                    onClickNext={this.handleClickNext}\n                />\n            );\n        } else if (currentScreen === SCREENS.end) {\n            return (\n                <ThankYou\n                    onFeedbackChange={this.handleFeedbackChange}\n                    onSubmit={this.handleClickNext}\n                    onClickBack={this.handleClickBack}\n                />\n            );\n        }\n    }\n\n    render() {\n        const displayedScreen = this.getDisplayedScreen();\n        return (\n            <div className=\"app\">\n                <div className=\"container\">\n                    <main>{displayedScreen}</main>\n                </div>\n            </div>\n        );\n    }\n}\n",
        "import App from \"./App\";\nimport \"./App.scss\";\n\nconst getData = (attribute, defaultValue = null, id = \"root\") => {\n    const value = document.getElementById(id).getAttribute(attribute);\n    return value && !value.startsWith(\"${\") ? value : defaultValue;\n};\n\nconst id = getData(\"data-id\");\nconst maxUtterances = getData(\"data-max-utterances\")\n    ? parseInt(getData(\"data-max-utterances\"))\n    : 1;\nconst minIntents =\n    getData(\"data-min-intents\") && parseInt(getData(\"data-min-intents\"));\nconst conjunctionWords = getData(\"data-conjunction-words\")\n    ? getData(\"data-conjunction-words\")\n          .split(\"|\")\n          .map((word) => ({\n              display: word.trim().split(\":\")[0],\n              verification: word.trim().split(\":\")[1].split(\",\"),\n          }))\n    : [];\nconst minConjunctionWords =\n    getData(\"min-conjunction-words\") &&\n    parseInt(getData(\"min-conjunction-words\"));\nconst quantifiers = getData(\"data-quantifiers\")\n    ? getData(\"data-quantifiers\")\n          .split(\"|\")\n          .map((icon) => icon.trim())\n    : [];\nconst excludedTerms = getData(\"data-excluded-terms\", \"\").split(\"|\");\nconst requiredFlowsInUtterance = getData(\n    \"data-required-flows-in-utterance\",\n    \"\"\n).split(\"|\");\nconst excludedApps = getData(\"data-excluded-apps\", \"\").split(\"|\");\nconst maxLength =\n    getData(\"data-max-length\") && parseInt(getData(\"data-max-length\"));\nconst quantifierIdx = null;\nconst showExamples = Boolean(getData(\"data-show-examples\", true));\nconst showAppHelp = Boolean(getData(\"data-show-app-help\", true));\n\nconst Root = () => {\n    return (\n        <div className=\"utterances\">\n            <App\n                id={id}\n                maxUtterances={maxUtterances}\n                minIntents={minIntents}\n                conjunctionWords={conjunctionWords}\n                minConjunctionWords={minConjunctionWords}\n                quantifiers={quantifiers}\n                quantifierIdx={quantifierIdx}\n                excludedApps={excludedApps}\n                maxLength={maxLength}\n                showExamples={showExamples}\n                showAppHelp={showAppHelp}\n                requiredFlowsInUtterance={requiredFlowsInUtterance}\n                excludedTerms={excludedTerms}\n            />\n        </div>\n    );\n};\n\nexport default Root;\n"
    ],
    "sourceRoot": ""
}
