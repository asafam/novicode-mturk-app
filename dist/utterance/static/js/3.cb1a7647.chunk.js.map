{"version":3,"sources":["utterances5/containers/home/Home.js","utterances5/components/help/Help.js","utterances5/containers/instructions/Instructions.js","utterances5/components/device/Device.js","utterances5/components/example/Example.js","utterances5/containers/simple/Simple.js","utterances5/containers/complex/Complex.js","utterances5/containers/Modal.js","utterances5/containers/utterance/Utterance.js","utterances5/containers/ThankYou.js","utterances5/App.js","utterances5/index.js"],"names":["Home","onClickSkip","this","props","className","type","onClick","React","Component","Instructions","title","desc","requirements","getRequirments","map","requirement","i","onClickNext","onClickBack","Device","appsInRow","apps","html","length","push","renderAppsGrid","name","icon","description","examples","getApps","Carousel","variant","interval","example","Item","find","a","Simple","caption","getTitle","getDescription","getExamples","Complex","MyVerticallyCenteredModal","Modal","size","animation","centered","Header","Title","id","Body","children","Footer","Button","onHide","AppModal","show","Utterance","utterance","context","contexts","state","getRandomContext","bind","handleClickNext","handleClickHelp","handleTextAreaChange","handleSwitchContextClick","prevProps","prevState","setState","event","index","utteranceLimit","disableTextOverflow","onUtteranceChange","target","value","newUtterance","Math","floor","random","onContextChange","conjunctionWords","conjunctionWords2","reduce","prevVal","w","concat","hasUtterance","Boolean","trim","hasConjunctionWords","conjunctionWordsIncluded","filter","toLowerCase","indexOf","split","valid","errorMessage","join","s","preventDefault","isUtteranceValid","showHelp","onSubmit","handleSubmit","noValidate","style","rows","onChange","placeholder","required","Selections","feedback","handleClickBack","onFeedbackChange","SCREENS","App","intents","constraints","currentScreen","intentsSelections","Array","constraintsSelections","workerResponses","handleFeedbackChange","handleUtteranceChange","handleSelectIntent","handleSelectConstraint","handleSelection","workerResponsesValues","workerResponse","selectedIntents","selectedConstraints","intentsValue","constraintsValue","intentsAnnotationsValue","substring","constraintsAnnotationsValue","workerResponseValue","intentsAnnotations","constraintsAnnotations","feedbackValue","document","querySelector","onsubmit","getElementById","JSON","stringify","submit","submitToMTurk","nextScreen","window","scrollTo","itemsCounter","currentSelectionIndex","maxUtterances","maxLength","maxLengthPerIntent","minIntents","minConstraints","minConjunctionWords","onClickExample","onClickHelp","ThankYou","displayedScreen","getDisplayedScreen","getData","attribute","getAttribute","startsWith","parseInt","word","display","verification","quantifiers","Root","linkWordIdx","quantifierIdx"],"mappings":"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","file":"static/js/3.cb1a7647.chunk.js","sourcesContent":["import React from 'react';\nimport './Home.scss';\n\n\nexport default class Home extends React.Component {\n    render() {\n        const { onClickSkip } = this.props;\n\n        return (\n            <div className=\"home\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"header text-center\">\n                                <h1>Virtual Assistant++</h1>\n                                <h3><span className=\"bi bi-robot\" /></h3>\n                                <p>Your goal in this task is to write Complex\n                                    Instructions to the perfect virtual assistant\n                                    (better than Google assistant, Alexa or Siri)</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col\">\n                            <div className=\"mt-4 mb-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={onClickSkip}>\n                                    Start\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport './Help.scss';\n\n\nexport default class Instructions extends React.Component {\n\n    getRequirments() {\n        return [\n            {\n                title: \"Relevant\",\n                desc: \"The different parts in your complex request should be related to one another. \"\n            },\n            {\n                title: \"Can be done by a virtual assistant\",\n                desc: \"Think of instructions that are possible for a virtual assistant to perform. As a rule of thumb, if a virtual assistant (like Siri or Alexa) can do each of the simple instructions that make the complex instruction, then it is valid.\"\n            },\n            {\n                title: \"Useful\",\n                desc: \"Think about real-life scenarios where you could use this ideal virtual assistance in your favor.\"\n            },\n            {\n                title: \"Diverse\",\n                desc: \"Don’t repeat yourself. Think of instructions in different apps. \"\n            },\n            {\n                title: \"Unambiguous\",\n                desc: \"A person can clearly understand the intents within your instruction.\"\n            },\n        ]\n    }\n\n    render() {\n        const requirements = this.getRequirments();\n\n        return (\n            <div className=\"instructions\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"header text-center\">\n                            <h1 className='text-center'><span className=\"title-small\">Your task:</span>Write Complex instructions</h1>\n                            <p>Now, you think of something you can ask your\n                                virtual assistant that involves multiple apps\n                                (or the same app multiple times).</p>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h3>Requirements</h3>\n                        <ol className=\"requirements\">\n                            {requirements.map((requirement, i) => (\n                                <li className=\"requirement\" key={i}>\n                                    <div className=\"requirement-title bold\">{requirement['title']}</div>\n                                    <div className=\"requirement-desc\">{requirement['desc']}</div>\n                                </li>\n                            ))}\n                        </ol>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Help from '../../components/help/Help';\nimport './Instructions.scss';\n\n\nexport default class Instructions extends React.Component {\n\n    render() {\n        const { onClickNext, onClickBack } = this.props;\n\n        return (\n            <div className=\"instructions\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Help />\n                    </div>\n\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"actions bottom mt-4 mb-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={onClickNext}><i className=\"bi bi-chevron-right\" /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}","/**\n * https://www.w3schools.com/howto/howto_css_devices.asp\n */\n\nimport React from 'react';\nimport './Device.scss';\n\n\nexport default class Device extends React.Component {\n\n    renderAppsGrid(appsInRow = 3) {\n        const { apps } = this.props;\n        let html = [];\n        for (let i = 0; i < apps.length; i += appsInRow) {\n            html.push(\n                <div className='row' key={i}>\n                    <div className=\"col-sm app\">\n                        <div className=\"app-icon text-center\"><span className={`bi bi-${apps[i]['icon']}`} /></div>\n                        <div className=\"app-name text-center\">{apps[i]['name']}</div>\n                    </div>\n                    {((i + 1) < apps.length) &&\n                        <div className=\"col-sm app\">\n                            <div className=\"app-icon text-center\"><span className={`bi bi-${apps[i + 1]['icon']}`} /></div>\n                            <div className=\"app-name text-center\">{apps[i + 1]['name']}</div>\n                        </div>\n                    }\n                    {((i + 2) < apps.length) &&\n                        <div className=\"col-sm app\">\n                            <div className=\"app-icon text-center\"><span className={`bi bi-${apps[i + 2]['icon']}`} /></div>\n                            <div className=\"app-name text-center\">{apps[i + 2]['name']}</div>\n                        </div>\n                    }\n                </div>\n            );\n        }\n        return (\n            <div className=\"apps\">\n                {html}\n            </div>\n        );\n    }\n\n    render() {\n\n\n        return (\n            <div className=\"smartphone\">\n                <div className=\"content\">\n                    <div className=\"apps\">\n                        <div className=\"container\">\n                            {this.renderAppsGrid()}\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport Device from '../device/Device';\nimport './Example.scss';\n\n\nexport default class Home extends React.Component {\n\n    getApps() {\n        return [\n            { name: 'Map & Navigation', icon: 'truck' }, { name: 'Weather', icon: 'cloud-sun' }, { name: 'Calendar', icon: 'calendar-date' },\n            { name: 'Reminders', icon: 'bookmark' }, { name: 'Messages', icon: 'chat' }, { name: 'Music & Podcasts', icon: 'music-note-beamed' },\n            { name: 'Health', icon: 'heart-pulse' }, { name: 'Mail', icon: 'envelope' }, { name: 'Smart Home', icon: 'house' },\n            { name: 'Events & Tickets', icon: 'ticket-perforated' }, { name: 'Shopping', icon: 'cart' }, { name: 'photos', icon: 'camera' },\n        ];\n    }\n\n    render() {\n        const { title, description, examples } = this.props;\n        const apps = this.getApps();\n\n        return (\n            <div className=\"example\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"header text-center\">\n                            <h1>{title}</h1>\n                            <div>{description}</div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Device apps={apps} />\n                    </div>\n                    <div className=\"col align-self-center\">\n                        <div className=\"card card-block\">\n                            <Carousel variant=\"dark\" interval=\"10000\">\n                                {examples.map((example, i) => (\n                                    <Carousel.Item className=\"instruction-example positive-example\" key={i}>\n                                        <div className=\"vertical-center-container\">\n                                            <div className=\"vertical-center\">\n                                                <div className=\"example-title utterance-text text-center\">{example['title']}</div>\n                                                {example['caption'] &&\n                                                    <div className=\"example-caption utterance-text text-center\"><span className={`bi bi-${apps.find(a => a['name'] === example['caption'])['icon']}`} />{example['caption']}<span /></div>\n                                                }\n                                            </div>\n                                        </div>\n                                    </Carousel.Item>\n                                ))}\n                            </Carousel>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Example from '../../components/example/Example';\nimport './Simple.scss';\n\n\nexport default class Simple extends React.Component {\n\n    getTitle() {\n        return \"Simple instructions\";\n    }\n\n    getDescription() {\n        return (\n            <p>You are given a mobile device with the following apps. You can\n                ask your virtual assistant to perform <span className=\"bold\">Simple\n                    Instructions</span> using these apps.</p>\n        );\n    }\n\n    getExamples() {\n        return [\n            { title: \"Remind me at 2 pm to call dad\", caption: \"Reminders\" },\n            { title: \"Send a message to Louise and ask if I left my wallet in her car.\", caption: \"Messages\" },\n            { title: \"If I leave Shakespeare in the Park at 6 pm, when will I get home?\", caption: \"Map & Navigation\" },\n            { title: \"Is it going to snow through the spring in upstate new york?\", caption: \"Weather\" },\n        ]\n    }\n\n    render() {\n        const { onClickNext, onClickBack } = this.props;\n        const title = this.getTitle();\n        const description = this.getDescription();\n        const examples = this.getExamples();\n\n        return (\n            <div className=\"simple\">\n                <div className=\"container\">\n                    <Example title={title} description={description} examples={examples} onClickNext={onClickNext} onClickBack={onClickBack} />\n\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"actions bottom mt-4 mb-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={onClickNext}><i className=\"bi bi-chevron-right\" /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Example from '../../components/example/Example';\nimport './Complex.scss';\n\n\nexport default class Complex extends React.Component {\n\n    getTitle() {\n        return \"Complex instructions\";\n    }\n\n    getDescription() {\n        return (\n            <p>A <span className=\"bold\">Complex Instruction</span> allows you\n                to request multiple simple instructions in a single command from\n                your virtual assistant. Instructions can be expressed in repetition,\n                sequence and conditions.</p>\n        );\n    }\n\n    getExamples() {\n        return [\n            { title: \"Text coach Nick that I will be late and ask Lauren if I left my keys in her car\" },\n            { title: \"Is there a Coldplay concert in the park in July, August or September?\" },\n            { title: \"Check my mail and my messages for any unread message from Dad from today\" },\n            { title: \"Show me directions to the nearest pharmacy that is open now\" },\n        ]\n    }\n\n    render() {\n        const { onClickNext, onClickBack } = this.props;\n        const title = this.getTitle();\n        const description = this.getDescription();\n        const examples = this.getExamples();\n\n        return (\n            <div className=\"simple\">\n                <div className=\"container\">\n                    <Example title={title} description={description} examples={examples} onClickNext={onClickNext} onClickBack={onClickBack} />\n\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"actions bottom mt-4 mb-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={onClickNext}><i className=\"bi bi-chevron-right\" /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Button } from 'react-bootstrap';\n\n\nconst MyVerticallyCenteredModal = (props) => {\n    return (\n        <Modal\n            {...props}\n            size=\"xl\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            animation={false}\n            centered\n        >\n            <Modal.Header>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    <div className=\"text-center\"><i className=\"bi bi-life-preserver\"></i></div>\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div>\n                    {props.children}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default class AppModal extends React.Component {\n    render() {\n        const { show, onHide, children } = this.props;\n\n        return (\n            <div className=\"help\">\n                <MyVerticallyCenteredModal show={show} onHide={onHide}>\n                    {children}\n                </MyVerticallyCenteredModal>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport AppModal from '../Modal';\nimport Device from '../../components/device/Device';\nimport Help from '../../components/help/Help';\nimport './Utterance.scss';\n\n\nexport default class Utterance extends React.Component {\n    constructor(props) {\n        super(props);\n        const { utterance, context, contexts } = props;\n        this.state = {\n            utterance,\n            context: context || this.getRandomContext(contexts),\n        };\n\n        this.getApps = this.getApps.bind(this);\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickHelp = this.handleClickHelp.bind(this);\n        this.handleTextAreaChange = this.handleTextAreaChange.bind(this);\n        this.handleSwitchContextClick = this.handleSwitchContextClick.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.utterance !== this.props.utterance) {\n            let { utterance } = this.props;\n            utterance = utterance || \"\";\n            this.setState({ utterance });\n        }\n    }\n\n    handleTextAreaChange(event) {\n        const { index, utteranceLimit, disableTextOverflow, onUtteranceChange } = this.props;\n        const { context } = this.state;\n        const utterance = event.target.value;\n        const newUtterance = !disableTextOverflow || utterance.length <= utteranceLimit ? utterance : (this.state.utterance || \"\");\n        this.setState({ utterance: newUtterance });\n        onUtteranceChange && onUtteranceChange(index, utterance, context);\n    }\n\n    handleSwitchContextClick() {\n        const { contexts } = this.props;\n        const context = this.getRandomContext(contexts);\n        this.setState({ context });\n    }\n\n    getApps() {\n        return [\n            { name: 'Map & Navigation', icon: 'truck' }, { name: 'Weather', icon: 'cloud-sun' }, { name: 'Calendar', icon: 'calendar-date' },\n            { name: 'Reminders', icon: 'bookmark' }, { name: 'Messages', icon: 'chat' }, { name: 'Music & Podcasts', icon: 'music-note-beamed' },\n            { name: 'Health', icon: 'heart-pulse' }, { name: 'Mail', icon: 'envelope' }, { name: 'Smart Home', icon: 'house' },\n            { name: 'Events & Tickets', icon: 'ticket-perforated' }, { name: 'Shopping', icon: 'cart' }, { name: 'photos', icon: 'camera' },\n        ];\n    }\n\n    getRandomContext(contexts) {\n        const context = contexts[Math.floor(Math.random() * contexts.length)];\n        const { onContextChange } = this.props;\n        onContextChange && onContextChange(context);\n        return context;\n    }\n\n    isUtteranceValid() {\n        const { conjunctionWords, utteranceLimit } = this.props;\n        const { utterance } = this.state;\n        const conjunctionWords2 = conjunctionWords.reduce((prevVal, w) => (prevVal.concat(w['verification'] || [w['display']])), [])\n        const hasUtterance = Boolean(utterance && utterance.trim().length > 0)\n        const hasConjunctionWords = Boolean(conjunctionWords2 && conjunctionWords2.length > 0)\n        const conjunctionWordsIncluded = (hasUtterance && hasConjunctionWords && conjunctionWords2.filter(w => utterance.toLowerCase().indexOf(w.trim().toLowerCase()) !== -1).length > 0);\n\n        if (!hasUtterance || utterance.split(\" \").length <= 2) {\n            // the utterance is too short\n            this.setState({ valid: false, errorMessage: <span>Please be more creative.</span> })\n            return false;\n        } else if (hasConjunctionWords && !conjunctionWordsIncluded) {\n            // none of the mandaroty conjunctionWords are included\n            this.setState({ valid: false, errorMessage: <span>Please use at least 1 of the following word: <strong>{conjunctionWords.map(w => w['display']).join(\", \")}</strong>.</span> })\n            return false;\n        } else if ((utterance.indexOf(\"?\") >= 0 && utterance.indexOf(\"?\") < utterance.length * 0.5) || utterance.trim().split(\"?\").filter(s => s.length > 0).length > 1) {\n            // the utterance has been phrased as multiple utterances\n            this.setState({ valid: false, errorMessage: <span>Please try to phrase the utterance as a <strong>single</strong> request (and not in multiple phrases).</span> })\n            return false;\n        } else if (utterance.length > utteranceLimit) {\n            // the utterance is too long\n            this.setState({ valid: false, errorMessage: <span>Your utterance is too long!</span> })\n            return false;\n        } else {\n            this.setState({ valid: true });\n            return true;\n        }\n    }\n\n    handleClickNext(event) {\n        event.preventDefault();\n\n        if (this.isUtteranceValid()) {\n            this.props.onClickNext();\n        }\n    }\n\n    handleClickHelp(event) {\n        this.setState({ showHelp: true, });\n    }\n\n    render() {\n        const { utteranceLimit, onClickBack } = this.props;\n        const { utterance, valid, errorMessage, showHelp } = this.state;\n        const apps = this.getApps();\n\n        if (showHelp) {\n            return (\n                <AppModal show={showHelp} onHide={() => this.setState({ showHelp: false })}>\n                    <Help />\n                </AppModal>\n            );\n        }\n\n        return (\n            <div className=\"utterance px-4 py-5 my-5\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"header text-center\">\n                                <h1 className='text-center'><span className=\"title-small\">Your task:</span>Write Complex instructions</h1>\n                                <p>Follow the requirements and write a complex\n                                    instruction to your virtual assistant. Use the\n                                    following apps in your request.</p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-3 mb-3\">\n                        <div className=\"col\">\n                            <Device apps={apps} />\n                        </div>\n                        <div className=\"col align-self-center\">\n                            <div className=\"card mt-4\">\n                                <div className=\"card-header\">\n                                    <h3 className=\"text-center\"><span className=\"intent-icon bi bi-keyboard\" />Write here</h3>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <form className=\"g-3 needs-validation pt-1\" onSubmit={this.handleSubmit} noValidate>\n                                                <div className=\"has-validation\">\n                                                    <label className=\"form-label\" style={{ \"display\": \"none\" }}>Write a complex utterance</label>\n                                                    <textarea className={`input-textarea utterance-text form-control mb-3 ${(valid === true && \"is-valid\") || (valid === false && \"is-invalid\")}`}\n                                                        rows=\"5\" value={utterance} type=\"text\" id=\"utterance\" aria-describedby=\"help\"\n                                                        onChange={this.handleTextAreaChange} placeholder=\"Type your complex utterance here...\" required>\n                                                    </textarea>\n                                                    <div className=\"p-1 m-1\">\n                                                        <span className={(utterance || \"\").length > utteranceLimit ? 'text-danger' : ''}>{(utterance || \"\").length}</span> / {utteranceLimit}\n                                                    </div>\n                                                    <div className=\"invalid-feedback\">{errorMessage}</div>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div >\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"actions bottom mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={this.handleClickNext}><i className=\"bi bi-chevron-right\" /></button>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n\n                <div className=\"actions float\">\n                    <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickHelp}><i className=\"bi bi-life-preserver\" />Help</button>\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\n\nclass Selections extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            feedback: \"\"\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleClickBack = this.handleClickBack.bind(this);\n        this.handleTextAreaChange = this.handleTextAreaChange.bind(this);\n    }\n\n    handleTextAreaChange(event) {\n        const { onFeedbackChange } = this.props;\n        const feedback = event.target.value;\n        this.setState({ feedback });\n        onFeedbackChange && onFeedbackChange(feedback);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const { feedback } = this.state;\n        this.props.onSubmit(feedback);\n    }\n\n    handleClickBack(event) {\n        event.preventDefault();\n        this.props.onClickBack();\n    }\n\n    render() {\n        const { feedback } = this.state;\n\n        return (\n            <div className=\"thank-you\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h2 className=\"text-muted text-center mb-3\">Thank You.</h2>\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-3 mb-3\">\n                        <div className=\"col\">\n                            <div className=\"card mt-4\">\n                                <div className=\"card-header\">\n                                    <h4 className=\"text-center\"><span className=\"intent-icon bi bi-megaphone\" />Have any feedback?</h4>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <form className=\"g-3 needs-validation pt-1\" onSubmit={this.handleSubmit} noValidate>\n                                                <div className=\"has-validation\">\n                                                    <textarea className=\"feedback-textarea form-control mb-3\"\n                                                        rows=\"3\" value={feedback} type=\"text\" id=\"feedback-text\" aria-describedby=\"help\"\n                                                        onChange={this.handleTextAreaChange} placeholder=\"Enter your feedback here...\" required>\n                                                    </textarea>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div >\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={this.handleSubmit}>Finish</button>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Selections;","import React from 'react';\nimport Home from './containers/home/Home';\nimport Instructions from './containers/instructions/Instructions';\nimport Simple from './containers/simple/Simple';\nimport Complex from './containers/complex/Complex';\nimport Utterance from './containers/utterance/Utterance';\nimport ThankYou from './containers/ThankYou';\nimport './App.scss';\n\nconst SCREENS = {\n    home: 1,\n    simple: 2,\n    complex: 3,\n    instructions: 4,\n    utterance: 5,\n    end: 6\n}\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        const { intents, constraints } = props;\n        this.state = {\n            index: 0,\n            currentScreen: SCREENS.home,\n            intentsSelections: intents && new Array(intents.length),\n            constraintsSelections: constraints && new Array(constraints.length),\n            workerResponses: []\n        };\n\n        this.handleClickBack = this.handleClickBack.bind(this);\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickHelp = this.handleClickHelp.bind(this);\n        this.handleFeedbackChange = this.handleFeedbackChange.bind(this);\n        this.handleUtteranceChange = this.handleUtteranceChange.bind(this);\n        this.handleSelectIntent = this.handleSelectIntent.bind(this);\n        this.handleSelectConstraint = this.handleSelectConstraint.bind(this);\n        this.handleSelection = this.handleSelection.bind(this);\n    }\n\n    submitToMTurk() {\n        const { intents, constraints } = this.props;\n        const { workerResponses, feedback } = this.state;\n        const workerResponsesValues = []\n        for (const i in workerResponses) {\n            const workerResponse = workerResponses[i]\n            const { utterance, context, selectedIntents, selectedConstraints, intentsSelections, constraintsSelections } = workerResponse;\n            const intentsValue = selectedIntents && selectedIntents.map(index => intents[index]).join(\" | \");\n            const constraintsValue = selectedConstraints && selectedConstraints.map(index => constraints[index]).join(\" | \");\n            const intentsAnnotationsValue = selectedIntents && selectedIntents.map((index, i) => utterance.substring(intentsSelections[i][0], intentsSelections[i][1])).join(\" | \");\n            const constraintsAnnotationsValue = selectedConstraints && selectedConstraints.map((index, i) => utterance.substring(constraintsSelections[i][0], constraintsSelections[i][1])).join(\" | \");\n            const workerResponseValue = {\n                utterance,\n                context,\n                intents: intentsValue,\n                constraints: constraintsValue,\n                intentsAnnotations: intentsAnnotationsValue,\n                constraintsAnnotations: constraintsAnnotationsValue\n            };\n            workerResponsesValues.push(workerResponseValue)\n        }\n        const feedbackValue = feedback;\n\n        document.querySelector('crowd-form').onsubmit = () => {\n            if (document.getElementById('worker-responses')) {\n                document.getElementById('worker-responses').value = JSON.stringify(workerResponsesValues);\n                document.getElementById('worker-feedback').value = feedbackValue;\n            }\n        };\n        document.querySelector('crowd-form').submit();\n    }\n\n    handleClickNext() {\n        const { currentScreen } = this.state;\n\n        if (currentScreen === SCREENS.end) {\n            this.submitToMTurk(this.state);\n        } else {\n            const nextScreen = (currentScreen + 1)\n            this.setState({ currentScreen: nextScreen });\n        }\n        window.scrollTo(0, 0);\n    }\n\n    handleClickBack() {\n        const { currentScreen } = this.state;\n\n        if (currentScreen !== SCREENS.home) {\n            const nextScreen = (currentScreen - 1)\n            this.setState({ currentScreen: nextScreen });\n        }\n        window.scrollTo(0, 0);\n    }\n\n    handleClickHelp() {\n        this.setState({ showHelp: true, });\n    }\n\n    handleFeedbackChange(feedback) {\n        this.setState({ feedback });\n    }\n\n    handleUtteranceChange(index, utterance, context) {\n        const { workerResponses } = this.state;\n        workerResponses[index] = { ...workerResponses[index], ...{ utterance, context, intentsSelections: [], constraintsSelections: [] } };\n        this.setState({ workerResponses });\n    }\n\n    handleSelectIntent(index, itemsCounter) {\n        const { workerResponses } = this.state;\n        workerResponses[index] = { ...workerResponses[index], ...{ selectedIntents: itemsCounter, intentsSelections: [] } };\n        this.setState({ workerResponses });\n    }\n\n    handleSelectConstraint(index, itemsCounter) {\n        const { workerResponses } = this.state;\n        workerResponses[index] = { ...workerResponses[index], ...{ selectedConstraints: itemsCounter, constraintsSelections: [] } };\n        this.setState({ workerResponses });\n    }\n\n    handleSelection(index, intentsSelections, constraintsSelections, currentSelectionIndex) {\n        const { workerResponses } = this.state;\n        workerResponses[index] = { ...workerResponses[index], ...{ intentsSelections, constraintsSelections, currentSelectionIndex } };\n        this.setState({ workerResponses });\n    }\n\n    getDisplayedScreen() {\n        const { maxUtterances, contexts, maxLength, maxLengthPerIntent, minIntents, minConstraints, intents, constraints, conjunctionWords, minConjunctionWords } = this.props;\n        const { currentScreen, index, workerResponses } = this.state;\n        const { utterance, context } = workerResponses.length > index ? workerResponses[index] : {};\n        const utteranceLimit = maxLength || maxLengthPerIntent * intents.length || 250;\n\n        if (currentScreen === SCREENS.home) {\n            return (\n                <Home onClickExample={this.handleClickHelp} onClickSkip={this.handleClickNext} />\n            );\n        } else if (currentScreen === SCREENS.simple) {\n            return (\n                <Simple onClickBack={this.handleClickBack} onClickNext={this.handleClickNext} />\n            );\n        } else if (currentScreen === SCREENS.complex) {\n            return (\n                <Complex onClickBack={this.handleClickBack} onClickNext={this.handleClickNext} />\n            );\n        } else if (currentScreen === SCREENS.instructions) {\n            return (\n                <Instructions onClickBack={this.handleClickBack} onClickNext={this.handleClickNext} />\n            );\n        } else if (currentScreen === SCREENS.utterance) {\n            return (\n                <Utterance index={index} maxUtterances={maxUtterances} utterance={utterance}\n                    utteranceLimit={utteranceLimit} minIntents={minIntents} minConstraints={minConstraints}\n                    intents={intents} constraints={constraints}\n                    conjunctionWords={conjunctionWords} minConjunctionWords={minConjunctionWords} contexts={contexts} context={context}\n                    onUtteranceChange={this.handleUtteranceChange} onClickBack={this.handleClickBack}\n                    onClickHelp={this.handleClickHelp} onClickNext={this.handleClickNext} />\n            );\n        } else if (currentScreen === SCREENS.end) {\n            return (\n                <ThankYou onFeedbackChange={this.handleFeedbackChange}\n                    onSubmit={this.handleClickNext} onClickBack={this.handleClickBack} />\n            );\n        }\n    }\n\n    render() {\n        const displayedScreen = this.getDisplayedScreen();\n        return (\n            <div className=\"app\">\n                <div className=\"container\">\n                    <main>\n                        {displayedScreen}\n                    </main>\n                </div>\n            </div>\n        );\n    }\n}","import App from './App';\nimport './App.scss';\n\n\nconst getData = (attribute, id = 'root') => {\n  const value = document.getElementById(id).getAttribute(attribute);\n  return value && !value.startsWith(\"${\") ? value : null;\n};\n\nconst id = getData('data-id');\nconst maxUtterances = getData('data-max-utterances') ? parseInt(getData('data-max-utterances')) : 1;\nconst context = getData('data-context');\nconst contexts = getData('data-contexts') ? getData('data-contexts').split(\"|\").map(context => context.trim()) : [];\n// const intentNames = getData('data-intents') ? getData('data-intents').split(\"|\").filter(x => x && x.length > 0).map(intent => intent.trim()) : [];\n// const intentIcons = getData('data-intent-icons') ? getData('data-intent-icons').split(\"|\").filter(x => x && x.length > 0).map(icon => icon.trim()) : [];\nconst minIntents = getData('data-min-intents') && parseInt(getData('data-min-intents'));\n// const constraintNames = getData('data-constraints') ? getData('data-constraints').split(\"|\").filter(x => x && x.length > 0).map(intent => intent.trim()) : [];\n// const constraintIcons = getData('data-constraint-icons') ? getData('data-constraint-icons').split(\"|\").filter(x => x && x.length > 0).map(icon => icon.trim()) : [];\nconst minConstraints = getData('data-min-constraints') && parseInt(getData('data-min-constraints'));\nconst conjunctionWords = getData('data-conjunction-words') ? getData('data-conjunction-words').split(\"|\").map(word => ({ display: word.trim().split(\":\")[0], verification: word.trim().split(\":\")[1].split(\",\") })) : [];\nconst minConjunctionWords = getData('min-conjunction-words') && parseInt(getData('min-conjunction-words'));\nconst quantifiers = getData('data-quantifiers') ? getData('data-quantifiers').split(\"|\").map(icon => icon.trim()) : [];\nconst maxLength = getData('data-max-length') && parseInt(getData('data-max-length'));\nconst maxLengthPerIntent = getData('data-max-length-per-intent') && parseInt(getData('data-max-length-per-intent'));\nconst intents = [\n  { name: 'General knowledge', icon: 'google' }, { name: 'Weather', icon: 'cloud-sun' }, { name: 'Reminders', icon: 'bookmark' },\n  { name: 'Calendar', icon: 'calendar-date' }, { name: 'Events & Tickets', icon: 'ticket-perforated' }, { name: 'Mail', icon: 'envelope' },\n  { name: 'Messages', icon: 'chat' }, { name: 'Map & Navigation', icon: 'truck' }, { name: 'Shopping', icon: 'cart' },\n  { name: 'Music & Podcasts', icon: 'music-note-beamed' }, { name: 'Smart Home', icon: 'house' }, { name: 'Health & Nutrition', icon: 'heart-pulse' }\n];\nconst constraints = [];\nconst linkWordIdx = null;\nconst quantifierIdx = null;\n\nconst Root = () => {\n  return (\n    <div className=\"utterances\">\n      <App id={id} context={context} contexts={contexts} maxUtterances={maxUtterances}\n        intents={intents} minIntents={minIntents} constraints={constraints} minConstraints={minConstraints}\n        conjunctionWords={conjunctionWords} minConjunctionWords={minConjunctionWords} linkWordIdx={linkWordIdx}\n        quantifiers={quantifiers} quantifierIdx={quantifierIdx}\n        maxLength={maxLength} maxLengthPerIntent={maxLengthPerIntent} />\n    </div>\n  );\n}\n\nexport default Root;\n"],"sourceRoot":""}