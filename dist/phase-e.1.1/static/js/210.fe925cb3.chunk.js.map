{"version":3,"file":"static/js/210.fe925cb3.chunk.js","mappings":"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","sources":["rephrase/containers/home/Home.js","rephrase/data/tasks.js","rephrase/components/examples/Examples.js","rephrase/components/help/Help.js","rephrase/data/examples.js","rephrase/containers/instructions/Instructions.js","rephrase/components/device/AppBox.js","rephrase/components/device/Device.js","rephrase/utils/utils.js","rephrase/data/apps.js","rephrase/components/command/Command.js","rephrase/containers/simple/Simple.js","rephrase/containers/Modal.js","rephrase/components/help/HelpFlows.js","rephrase/containers/complex/Complex.js","rephrase/containers/utterance/RephraseUtterances.js","rephrase/containers/utterance/RequestedFlows.js","rephrase/containers/utterance/ExcludedApps.js","rephrase/containers/utterance/ExcludedTerms.js","rephrase/containers/utterance/UtteranceInput.js","rephrase/containers/utterance/Utterance.js","rephrase/containers/verification/Verification.js","rephrase/containers/ThankYou.js","rephrase/App.js","rephrase/index.js"],"sourcesContent":["import React from 'react';\nimport './Home.scss';\n\nexport default class Home extends React.Component {\n    render() {\n        const { onClickSkip } = this.props;\n\n        return (\n            <div className=\"home page\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"header text-center\">\n                                <h1>Virtual Assistant++</h1>\n                                <h3>\n                                    <span className=\"bi bi-robot\" />\n                                </h3>\n                                <p>\n                                    Your goal in this task is to write a Complex\n                                    command to the perfect virtual assistant\n                                    (better than Google assistant, Alexa or\n                                    Siri)\n                                </p>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-5\">\n                        <div className=\"col\">\n                            <div className=\"mt-4 mb-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary btn-lg px-4\"\n                                    onClick={onClickSkip}\n                                >\n                                    Start\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","export const getTaskDescription = (mode) => {\n    switch (mode) {\n        case 'paraphrase':\n            return (\n                <p>\n                    You will be given an example of a Complex command. You are\n                    requested to write a Complex command that is similar to the\n                    example, but different in some way. You can change the app,\n                    the action, the object, or the context. The overall\n                    structure of the complex command should remain the same.\n                </p>\n            );\n        case 'rewrite-complex-different-apps':\n            return (\n                <p>\n                    You will be given a valid{' '}\n                    <span className=\"bold\">Complex command</span> that\n                    incorporates one or more Simple app commands in a Sequence,\n                    Condition, or Multiplicity. Modify the Complex command to\n                    use different apps, while keeping the same format. You can\n                    change the apps used, the details, or the context.\n                </p>\n            );\n        case 'rewrite-simple-complex':\n            return (\n                <p>\n                    You will be given a{' '}\n                    <span className=\"bold\">Simple command</span> as an example.\n                    Your task is to create a{' '}\n                    <span className=\"bold\">Complex command</span> that\n                    incorporates this Simple command in a Sequence, Condition,\n                    or Multiplicity. You have the freedom to modify the app,\n                    action, object, or context as needed.\n                </p>\n            );\n        default:\n            return (\n                <p>\n                    Now, you think of a Complex command you can ask your virtual\n                    assistant that involves multiple apps (or the same app\n                    multiple times).\n                </p>\n            );\n    }\n};\n","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\nimport './Examples.scss';\n\nexport default class Examples extends React.Component {\n    getIcon(caption) {\n        const { apps } = this.props;\n        if (!apps) return null;\n\n        const app = apps.find((a) => a['name'] === caption);\n        const icon = app && app['icon'];\n        return icon;\n    }\n\n    render() {\n        const { examples, interval } = this.props;\n\n        return (\n            <div className=\"example\">\n                <div className=\"col align-self-center\">\n                    <h5 className=\"examples-header\">Examples:</h5>\n                    <div className=\"card card-block instruction-examples\">\n                        <Carousel variant=\"dark\" interval={interval || \"1000\"}>\n                            {examples.map((example, i) => (\n                                <Carousel.Item\n                                    className=\"instruction-example positive-example\"\n                                    key={i}\n                                >\n                                    <div className=\"vertical-center-container\">\n                                        <div className=\"vertical-center\">\n                                            <div className=\"example-title utterance-text text-center\">\n                                                {example['title']}\n                                            </div>\n                                            {example['caption'] && (\n                                                <div className=\"example-caption utterance-text text-center\">\n                                                    {this.getIcon(\n                                                        example['caption']\n                                                    ) && (\n                                                        <span\n                                                            className={`bi bi-${this.getIcon(\n                                                                example[\n                                                                    'caption'\n                                                                ]\n                                                            )}`}\n                                                        />\n                                                    )}\n                                                    {example['caption']}\n                                                    <span />\n                                                </div>\n                                            )}\n                                        </div>\n                                    </div>\n                                </Carousel.Item>\n                            ))}\n                        </Carousel>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport { getTaskDescription } from '../../data/tasks';\nimport Examples from '../examples/Examples';\nimport { getExamples } from '../../data/examples';\nimport './Help.scss';\n\nexport default class Instructions extends React.Component {\n    getTitle(mode) {\n        if (mode === 'rewrite-simple-complex') {\n            return <span>Rewrite a Simple Command as a Complex Command</span>;\n        } else if (mode === 'rewrite-complex-different-apps') {\n            return <span>Rewrite a Complex Command in Different Apps</span>;\n        } else {\n            return <span>Write a Complex Command</span>;\n        }\n    }\n\n    getRequirments() {\n        return [\n            {\n                title: 'Relevant',\n                desc: 'The different parts in your complex command should be related to one another. '\n            },\n            {\n                title: 'Can be done by a virtual assistant',\n                desc: 'Think of instructions that are possible for a virtual assistant to perform. As a rule of thumb, if a virtual assistant (like Siri or Alexa) can do each of the simple commands that make the complex command, then it is valid.'\n            },\n            {\n                title: 'Useful',\n                desc: 'Think about real-life scenarios where you could use this ideal virtual assistance in your favor.'\n            },\n            {\n                title: 'Diverse',\n                desc: 'Don’t repeat yourself. Think of commands in different apps or different commands in the same app. '\n            },\n            {\n                title: 'Unambiguous',\n                desc: 'A person can clearly understand the intents within your instruction.'\n            },\n            {\n                title: 'Referential',\n                desc: 'Instead of repeating a mention (for example, to a name, a place or a time) use a pronoun or other referring expression.'\n            }\n        ];\n    }\n\n    getExamples(mode) {\n        const examples = getExamples(mode);\n        switch (mode) {\n            case 'rewrite-complex-different-apps':\n                return examples.map((example) => ({\n                    title: (\n                        <div>\n                            <p>\n                                <span className=\"label text-blue\">\n                                    Original:\n                                </span>\n                                {example['complexOrig']}\n                            </p>\n                            <p>\n                                <span className=\"label text-purple\">New:</span>\n                                {example['complexNew']}\n                            </p>\n                        </div>\n                    ),\n                    caption: example['caption']\n                }));\n            case 'rewrite-simple-complex':\n                return examples.map((example) => ({\n                    title: (\n                        <div>\n                            <p>\n                                <span className=\"label text-blue\">Simple:</span>\n                                {example['simple']}\n                            </p>\n                            <p>\n                                <span className=\"label text-purple\">\n                                    Complex:\n                                </span>\n                                {example['complex']}\n                            </p>\n                        </div>\n                    ),\n                    caption: example['caption']\n                }));\n            default:\n                return [];\n        }\n    }\n\n    render() {\n        const { mode } = this.props;\n        const title = this.getTitle(mode);\n        const requirements = this.getRequirments();\n        const taskDescription = getTaskDescription(mode);\n        const examples = this.getExamples(mode);\n\n        return (\n            <div className=\"help page\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"header text-center\">\n                            <h1 className=\"text-center\">\n                                <span className=\"title-small\">Your task:</span>\n                                {title}\n                            </h1>\n                            <div>{taskDescription}</div>\n                        </div>\n                    </div>\n                </div>\n                {examples && (\n                    <div className=\"row examples\">\n                        <Examples examples={examples} interval={10000} />\n                    </div>\n                )}\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <h3>Requirements</h3>\n                        <ol className=\"requirements\">\n                            {requirements.map((requirement, i) => (\n                                <li className=\"requirement\" key={i}>\n                                    <div className=\"requirement-title bold\">\n                                        {requirement['title']}\n                                    </div>\n                                    <div className=\"requirement-desc\">\n                                        {requirement['desc']}\n                                    </div>\n                                </li>\n                            ))}\n                        </ol>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","export const getExamples = (mode) => {\n    switch (mode) {\n        case 'rewrite-complex-different-apps':\n            return [\n                {\n                    complexOrig:\n                        'If it rains tomorrow then remind me to bring an umbrella .',\n                    complexNew:\n                        \"If I leave now and arrive home after 7 pm then text my wife that I'm on my way.\",\n                    caption:\n                        \"Modify the command to use the Navigation and Messages apps, while keeping the same 'IF' Condition format.\"\n                },\n                {\n                    complexOrig:\n                        \"Route to the mall and from there to the doctor's office.\",\n                    complexNew:\n                        'Set a timer for 15 minutes and another for 30 minutes.',\n                    caption:\n                        \"Modify the command to use the Clock app while keeping the same Sequence format with the 'AND' word in the middle.\"\n                },\n                {\n                    complexOrig:\n                        'Remove all reminders for this week to pick up my sister.',\n                    complexNew:\n                        'Archive all emails that are mark as read from my boss.',\n                    caption:\n                        \"Modify the command to use the Email app while keeping the same Multiplicity format indicated by the 'ALL' word.\"\n                }\n            ];\n        case 'rewrite-simple-complex':\n            return [\n                {\n                    simple: 'Will it rain tomorrow?',\n                    complex:\n                        'Remind me to bring an umbrella if it rains tomorrow in Manhattan.',\n                    caption: 'Turn to a Condition'\n                },\n                {\n                    simple: 'Route to the mall?',\n                    complex:\n                        \"Route to the mall and from there to the doctor's office.\",\n                    caption: 'Turn to a Sequence'\n                },\n                {\n                    simple: 'Remove reminder to pick up my sister.',\n                    complex:\n                        'Remove all reminders for this week to pick up my sister.',\n                    caption: 'Turn to a Repitition'\n                }\n            ];\n        default:\n            return [];\n    }\n};\n","import React from 'react';\nimport Help from '../../components/help/Help';\nimport './Instructions.scss';\n\n\nexport default class Instructions extends React.Component {\n\n    render() {\n        const {mode,  onClickNext, onClickBack } = this.props;\n\n        return (\n            <div className=\"instructions\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <Help mode={mode} />\n                    </div>\n\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"actions bottom mt-4 mb-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={onClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={onClickNext}><i className=\"bi bi-chevron-right\" /></button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div >\n        );\n    }\n}","import React from 'react';\nimport './AppBox.scss';\n\nconst AppBox = ({ appName, appIcon }) => {\n    return (\n        <div className=\"app-box\">\n            <div className=\"app-icon text-center\">\n                <span className={`bi bi-${appIcon}`} />\n            </div>\n            <div className=\"app-name text-center\">{appName}</div>\n        </div>\n    );\n};\n\nexport default AppBox;\n","/**\n * https://www.w3schools.com/howto/howto_css_devices.asp\n */\n\nimport React from 'react';\nimport AppBox from './AppBox';\nimport './Device.scss';\n\nexport default class Device extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectAppIndex: null\n        };\n        this.handleClickApp = this.handleClickApp.bind(this);\n        this.handleCloseApp = this.handleCloseApp.bind(this);\n    }\n\n    handleClickApp(e) {\n        e.preventDefault();\n        const { showAppHelp } = this.props;\n        if (!showAppHelp) {\n            this.setState({ selectAppIndex: null });\n            return;\n        }\n\n        const index = parseInt(e.currentTarget.getAttribute('data-app-index'));\n        this.setState({ selectAppIndex: index });\n    }\n\n    handleCloseApp(e) {\n        e.preventDefault();\n        this.setState({ selectAppIndex: null });\n    }\n\n    renderAppsGrid(appsInRow = 3) {\n        const { apps } = this.props;\n\n        let html = [];\n        for (let i = 0; i < apps.length; i += appsInRow) {\n            html.push(\n                <div className=\"row\" key={i}>\n                    <div\n                        className=\"col-sm-4 app-container\"\n                        data-app-index={i}\n                        onClick={this.handleClickApp}\n                    >\n                        <AppBox\n                            appName={apps[i]['name']}\n                            appIcon={apps[i]['icon']}\n                        />\n                    </div>\n                    {i + 1 < apps.length && (\n                        <div\n                            className=\"col-sm-4 app-container\"\n                            data-app-index={i + 1}\n                            onClick={this.handleClickApp}\n                        >\n                            <AppBox\n                                appName={apps[i + 1]['name']}\n                                appIcon={apps[i + 1]['icon']}\n                            />\n                        </div>\n                    )}\n                    {i + 2 < apps.length && (\n                        <div\n                            className=\"col-sm-4 app-container\"\n                            data-app-index={i + 2}\n                            onClick={this.handleClickApp}\n                        >\n                            <AppBox\n                                appName={apps[i + 2]['name']}\n                                appIcon={apps[i + 2]['icon']}\n                            />\n                        </div>\n                    )}\n                </div>\n            );\n        }\n        return <div className=\"apps\">{html}</div>;\n    }\n\n    renderShowApp(index) {\n        const { apps } = this.props;\n        const app = apps[index];\n\n        return (\n            <div className=\"app-help\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"app-help-content\">\n                            <div\n                                className=\"close-icon\"\n                                onClick={this.handleCloseApp}\n                            >\n                                <span className=\"bi bi-x-circle\" />\n                            </div>\n                            <h3>\n                                <span className={`bi bi-${app['icon']}`} />\n                                {app['name']}\n                            </h3>\n                            <p>{app['about']}</p>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n\n    render() {\n        const { disableClickApps } = this.props;\n        const { selectAppIndex } = this.state;\n\n        return (\n            <div className=\"device\">\n                <div className=\"smartphone\">\n                    <div className=\"content\">\n                        <div className=\"apps\">\n                            <div className=\"container\">\n                                <div>{this.renderAppsGrid()}</div>\n                            </div>\n                        </div>\n                        {selectAppIndex !== null && (\n                            <div className=\"app-help\">\n                                {this.renderShowApp(selectAppIndex)}\n                            </div>\n                        )}\n                    </div>\n                </div>\n                {!disableClickApps && (\n                    <div className=\"device-help text-center\">\n                        Click any of the apps for more information\n                    </div>\n                )}\n            </div>\n        );\n    }\n}\n","\n\nexport const shuffleArray = (array) => {\n    let counter = array.length;\n\n    // While there are elements in the array\n    while (counter > 0) {\n        // Pick a random index\n        let index = Math.floor(Math.random() * counter);\n\n        // Decrease counter by 1\n        counter--;\n\n        // And swap the last element with it\n        let temp = array[counter];\n        array[counter] = array[index];\n        array[index] = temp;\n    }\n\n    return array;\n};","import { shuffleArray } from \"../utils/utils\";\n\nexport const getApps = (shuffle = false, excludedApps = [], limit = 0) => {\n    const apps = [\n        {\n            id: \"navigation\",\n            name: \"Navigation\",\n            icon: \"car-front\",\n            about: \"You can find the best routes based on real-time traffic, accident and road conditions. Know when you will arrive and when to leave to get to places on-time.\",\n        },\n        {\n            id: \"weather\",\n            name: \"Weather\",\n            icon: \"cloud-sun\",\n            about: \"You can get detailed local forecast & weather forecast world wide, the app provides the current temperature in Celsius and Fahrenheit, sunrise and sunset time according to city time zone.\",\n        },\n        {\n            id: \"calendar\",\n            name: \"Calendar\",\n            icon: \"calendar-date\",\n            about: \"You can schedule meetings and events, get reminders about upcoming activities and check your availability.\",\n        },\n        {\n            id: \"reminders\",\n            name: \"Reminders\",\n            icon: \"bookmark\",\n            about: \"You can use it for all of life's to-dos, including grocery lists, projects at work, or anything else you want to track\",\n        },\n        {\n            id: \"messages\",\n            name: \"Messages\",\n            icon: \"chat\",\n            about: \"Send texts, photos, videos, documents, stickers, Memoji, and more to contacts.\",\n        },\n        {\n            id: \"music\",\n            name: \"Music\",\n            icon: \"music-note-beamed\",\n            about: \"Play your favorites songs and albums. Listen to the music you love, and discover new music and podcasts.\",\n        },\n        {\n            id: \"clock\",\n            name: \"Clock\",\n            icon: \"alarm\",\n            about: \"Set regular alarms for any time of day and have them repeat on one or more days of the week. You can also use the timer to count down from a specified time. You can also use the it to measure the duration of an event. Start the timer, pause it, stop it and restart it.\",\n        },\n        {\n            id: \"mail\",\n            name: \"Mail\",\n            icon: \"envelope\",\n            about: \"You can send and receive message. You can also archive, delete, flag, or mark messages as read or unread.\",\n        },\n        {\n            id: \"home\",\n            name: \"Smart Home\",\n            icon: \"house\",\n            about: \"Easily control your smart home accessories from your mobile device. Turn off the lights, see who's at the front door, adjust your living room temperature, turn up the music, and so much more.\",\n        },\n        {\n            id: \"events\",\n            name: \"Events & Tickets\",\n            icon: \"ticket-perforated\",\n            about: \"Find out about the the best art and entertainment, food and drink, attractions, and immediately buy and sell tickets to these events.\",\n        },\n        {\n            id: \"shopping\",\n            name: \"Shopping\",\n            icon: \"cart\",\n            about: \"You can get access to online stores (like Amazon), search for stuff to buy, see recommendations, compare prices, look up products, check on your orders, manage subscriptions\",\n        },\n        {\n            id: \"map\",\n            name: \"Map & Places\",\n            icon: \"pin-map\",\n            about: \"Look up information about places, including hours, photos, ratings, and reviews. Search and browse by category, including food, drink, shopping, and more.\",\n        },\n    ];\n\n    let results = apps;\n\n    if (shuffle) {\n        results = shuffleArray(apps);\n    }\n\n    if (excludedApps && excludedApps.length > 0) {\n        results = results.filter((app) => excludedApps.indexOf(app.id) === -1);\n    }\n\n    if (limit > 0) {\n        results = results.slice(0, limit);\n    }\n\n    return results;\n};\n","import React from 'react';\nimport Device from '../device/Device';\nimport Examples from '../examples/Examples';\nimport { getApps } from '../../data/apps.js';\nimport './Command.scss';\n\nexport default class Command extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            apps: getApps(true, props.excludedApps)\n        };\n    }\n\n    getIcon(caption) {\n        const { apps } = this.state;\n        const app = apps.find((a) => a['name'] === caption);\n        const icon = app && app['icon'];\n        return icon;\n    }\n\n    render() {\n        const { title, description, examples, showAppHelp } = this.props;\n        const { apps } = this.state;\n        const hasExamples = Boolean(examples) && examples.length > 0;\n\n        return (\n            <div className=\"command\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"header text-center\">\n                            <h1>{title}</h1>\n                            <div>{description}</div>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <Device showAppHelp={showAppHelp} apps={apps} />\n                    </div>\n                    {hasExamples && (\n                        <div className=\"col examples-container\">\n                            <Examples examples={examples} apps={apps} />\n                        </div>\n                    )}\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport Command from '../../components/command/Command';\nimport './Simple.scss';\n\nexport default class Simple extends React.Component {\n    getTitle() {\n        return 'Simple commands';\n    }\n\n    getDescription() {\n        return (\n            <p>\n                You are given a mobile device with the following apps. You can\n                ask your virtual assistant to perform{' '}\n                <span className=\"bold\">Simple commands</span> using these apps.\n            </p>\n        );\n    }\n\n    getExamples() {\n        return [\n            { title: 'Remind me at 2 pm to call dad', caption: 'Reminders' },\n            {\n                title: 'Send a message to Louise and ask if I left my wallet in her car.',\n                caption: 'Messages'\n            },\n            {\n                title: 'If I leave Shakespeare in the Park at 6 pm, when will I get home?',\n                caption: 'Map & Navigation'\n            },\n            {\n                title: 'Is it going to snow through the spring in upstate new york?',\n                caption: 'Weather'\n            }\n        ];\n    }\n\n    render() {\n        const {\n            showExamples,\n            showAppHelp,\n            excludedApps,\n            onClickNext,\n            onClickBack\n        } = this.props;\n        const title = this.getTitle();\n        const description = this.getDescription();\n        const examples = showExamples ? this.getExamples() : null;\n\n        return (\n            <div className=\"simple page\">\n                <div className=\"container\">\n                    <Command\n                        title={title}\n                        description={description}\n                        examples={examples}\n                        showAppHelp={showAppHelp}\n                        excludedApps={excludedApps}\n                        onClickNext={onClickNext}\n                        onClickBack={onClickBack}\n                    />\n\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"actions bottom mt-4 mb-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-outline-secondary btn-lg px-4 gap-3\"\n                                    onClick={onClickBack}\n                                >\n                                    <i className=\"bi bi-chevron-left\" />\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary btn-lg px-4\"\n                                    onClick={onClickNext}\n                                >\n                                    <i className=\"bi bi-chevron-right\" />\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport Modal from 'react-bootstrap/Modal';\nimport { Button } from 'react-bootstrap';\n\n\nconst MyVerticallyCenteredModal = (props) => {\n    return (\n        <Modal\n            {...props}\n            size=\"xl\"\n            aria-labelledby=\"contained-modal-title-vcenter\"\n            animation={false}\n            centered\n        >\n            <Modal.Header>\n                <Modal.Title id=\"contained-modal-title-vcenter\">\n                    <div className=\"text-center\"><i className=\"bi bi-life-preserver\"></i></div>\n                </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n                <div>\n                    {props.children}\n                </div>\n            </Modal.Body>\n            <Modal.Footer>\n                <Button onClick={props.onHide}>Close</Button>\n            </Modal.Footer>\n        </Modal>\n    );\n};\n\nexport default class AppModal extends React.Component {\n    render() {\n        const { show, onHide, children } = this.props;\n\n        return (\n            <div className=\"help\">\n                <MyVerticallyCenteredModal show={show} onHide={onHide}>\n                    {children}\n                </MyVerticallyCenteredModal>\n            </div>\n        );\n    }\n}\n","import React from \"react\";\nimport Carousel from \"react-bootstrap/Carousel\";\nimport \"./HelpFlows.scss\";\n\nexport default class HelpFlows extends React.Component {\n    getExamples(flow) {\n        if (flow.toLowerCase() === \"multiplicity\") {\n            return [\n                {\n                    title: \"Wake me up every 30 minutes between 1 and 2 am\",\n                    caption: \"Multiplicity\",\n                },\n                {\n                    title: \"Is there a Coldplay concert in the park in July, August or September?\",\n                    caption: \"Multiplicity\",\n                },\n                {\n                    title: \"Which drugstores that is open right now will I arrive at in 15 minutes if I leave now?\",\n                    caption: \"Multiplicity\",\n                },\n            ];\n        } else if (flow.toLowerCase() === \"condition\") {\n            return [\n                {\n                    title: \"In case it will be hot tomorrow morning, text my sister that I will need to use my car at that time\",\n                    caption: \"Condition\",\n                },\n            ];\n        } else if (flow.toLowerCase() === \"sequence\") {\n            return [\n                {\n                    title: \"Text coach Nick that I will be late and ask Lauren if I left my keys in her car\",\n                    caption: \"Sequence\",\n                },\n            ];\n        }\n    }\n\n    render() {\n        const { flow } = this.props;\n        const examples = this.getExamples(flow);\n\n        return (\n            <div className=\"instructions\">\n                <div className=\"row\">\n                    <div className=\"col\">\n                        <div className=\"header text-center\">\n                            <h1 className=\"text-center title\">{flow}</h1>\n                            {flow.toLowerCase() === \"multiplicity\" && (\n                                <div>\n                                    <p>\n                                        Complex commands with with multiplicity\n                                        express an efficient way to repeat a\n                                        simple command multiple times, possibly\n                                        with slight changes. Without that, one\n                                        should had requested the simple command\n                                        multiple times.\n                                    </p>\n                                </div>\n                            )}\n                            {flow.toLowerCase() === \"condition\" && (\n                                <div>\n                                    <p>\n                                        Complex commands with condition allows\n                                        one to condition the excution of a\n                                        simple or complex command in the\n                                        validity of another simple or complex\n                                        command.\n                                    </p>\n                                </div>\n                            )}\n                            {flow.toLowerCase() === \"sequence\" && (\n                                <div>\n                                    <p>\n                                        Complex commands with sequences allows\n                                        one to request multiple commands in an\n                                        order.\n                                    </p>\n                                </div>\n                            )}\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"examples\">\n                        <h5 className=\"examples-header\">Examples:</h5>\n                        <div className=\"card card-block\">\n                            <Carousel variant=\"dark\" interval=\"10000\">\n                                {examples.map((example, i) => (\n                                    <Carousel.Item\n                                        className=\"instruction-example positive-example\"\n                                        key={i}\n                                    >\n                                        <div className=\"vertical-center-container\">\n                                            <div className=\"vertical-center\">\n                                                <div className=\"example-title utterance-text text-center\">\n                                                    {example[\"title\"]}\n                                                </div>\n                                                {example[\"caption\"] && (\n                                                    <div className=\"example-caption utterance-text text-center\">\n                                                        {example[\"caption\"]}\n                                                        <span />\n                                                    </div>\n                                                )}\n                                            </div>\n                                        </div>\n                                    </Carousel.Item>\n                                ))}\n                            </Carousel>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport AppModal from '../Modal';\nimport Command from '../../components/command/Command';\nimport HelpFlows from '../../components/help/HelpFlows';\nimport './Complex.scss';\n\nexport default class Complex extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            showHelpFlows: false\n        };\n\n        this.handleClickHelpFlows = this.handleClickHelpFlows.bind(this);\n    }\n\n    getTitle() {\n        return 'Complex commands';\n    }\n\n    getDescription(minimalDescription = false) {\n        return (\n            <p>\n                A <span className=\"bold\">Complex command</span> allows you to\n                request multiple simple commands in a <u>single</u> command from\n                your virtual assistant.{' '}\n                {!minimalDescription && (\n                    <span>\n                        Commands can be expressed in{' '}\n                        <span\n                            className=\"flow\"\n                            onClick={this.handleClickHelpFlows}\n                            data-id=\"multiplicity\"\n                        >\n                            multiplicity\n                        </span>\n                        ,{' '}\n                        <span\n                            className=\"flow\"\n                            onClick={this.handleClickHelpFlows}\n                            data-id=\"sequence\"\n                        >\n                            sequence\n                        </span>{' '}\n                        and\n                        <span\n                            className=\"flow\"\n                            onClick={this.handleClickHelpFlows}\n                            data-id=\"condition\"\n                        >\n                            conditions\n                        </span>\n                        .\n                    </span>\n                )}\n            </p>\n        );\n    }\n\n    getExamples() {\n        return [\n            {\n                title: 'Text coach Nick that I will be late and ask Lauren if I left my keys in her car',\n                caption: 'Sequence'\n            },\n            {\n                title: 'Is there a Coldplay concert in the park in July, August or September?',\n                caption: 'Multiplicity'\n            },\n            {\n                title: 'In case it will be hot tomorrow morning, text my sister that I will need to use my car at that time',\n                caption: 'Condition'\n            },\n            {\n                title: 'As I leave now to Shakespeare in the Park let everyone on my friends list know if I will be late and block my calendar at that time',\n                caption: 'Condition, Multiplicity & Sequence'\n            }\n        ];\n    }\n\n    handleClickHelpFlows(event) {\n        event.preventDefault();\n        const selectedFlow = event.target.getAttribute('data-id');\n        this.setState({ showHelpFlows: true, selectedFlow });\n    }\n\n    render() {\n        const {\n            minimalDescription,\n            showExamples,\n            showAppHelp,\n            excludedApps,\n            onClickNext,\n            onClickBack\n        } = this.props;\n        const { showHelpFlows, selectedFlow } = this.state;\n        const title = this.getTitle();\n        const description = this.getDescription(minimalDescription);\n        const examples = showExamples ? this.getExamples() : [];\n\n        if (showHelpFlows) {\n            return (\n                <AppModal\n                    show={showHelpFlows}\n                    onHide={() => this.setState({ showHelpFlows: false })}\n                >\n                    <HelpFlows flow={selectedFlow} />\n                </AppModal>\n            );\n        }\n\n        return (\n            <div className=\"complex page\">\n                <div className=\"container\">\n                    <Command\n                        title={title}\n                        description={description}\n                        examples={examples}\n                        excludedApps={excludedApps}\n                        showAppHelp={showAppHelp}\n                        onClickNext={onClickNext}\n                        onClickBack={onClickBack}\n                    />\n\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"actions bottom mt-4 mb-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-outline-secondary btn-lg px-4 gap-3\"\n                                    onClick={onClickBack}\n                                >\n                                    <i className=\"bi bi-chevron-left\" />\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary btn-lg px-4\"\n                                    onClick={onClickNext}\n                                >\n                                    <i className=\"bi bi-chevron-right\" />\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport Carousel from 'react-bootstrap/Carousel';\n\nconst getInstruction = (mode, numOfRephrasedUtterances = 1) => {\n    switch (mode) {\n        case 'rewrite-complex-different-apps':\n            return (\n                <p>\n                    {numOfRephrasedUtterances > 1 ? (\n                        <span>\n                            Select\n                            <span className=\"bold\">any</span> of the following{' '}\n                            <span>Complex commands</span>\n                        </span>\n                    ) : (\n                        <span>\n                            Use the following <span>Complex command</span>\n                        </span>\n                    )}{' '}\n                    as a starting point to be rewriten as the new Complex\n                    command:\n                </p>\n            );\n        case 'rewrite-simple-complex':\n            return (\n                <p>\n                    {numOfRephrasedUtterances > 1 ? (\n                        <span>\n                            Select\n                            <span className=\"bold\">any</span> of the following{' '}\n                            <span>Simple commands</span>\n                        </span>\n                    ) : (\n                        <span>\n                            Use the following <span>Simple command</span>\n                        </span>\n                    )}{' '}\n                    as a starting point to create the Complex command:\n                </p>\n            );\n        default:\n            return (\n                <p>\n                    {numOfRephrasedUtterances > 1 ? (\n                        <span>\n                            Select\n                            <span className=\"bold\">any</span> of the following{' '}\n                            commands\n                        </span>\n                    ) : (\n                        <span>Use the following command</span>\n                    )}{' '}\n                    as a starting point to create the rephrased Complex command:\n                </p>\n            );\n    }\n};\n\nconst RephraseUtterances = ({ rephraseUtterances, mode }) => {\n    const instruction = getInstruction(mode, rephraseUtterances.length);\n    return (\n        <div className=\"row base-utterances\">\n            <div>{instruction}</div>\n            <div className=\"rephrase-utterances instruction-examples\">\n                <Carousel variant=\"dark\">\n                    {rephraseUtterances.map((u, i) => (\n                        <Carousel.Item\n                            className=\"instruction-example positive-example\"\n                            key={i}\n                        >\n                            <div className=\"vertical-center-container\">\n                                <div className=\"vertical-center\">\n                                    <div className=\"example-title utterance-text text-center\">\n                                        {u}\n                                    </div>\n                                </div>\n                            </div>\n                        </Carousel.Item>\n                    ))}\n                </Carousel>\n            </div>\n        </div>\n    );\n};\n\nexport default RephraseUtterances;\n","import React from 'react';\n\nconst RequestedFlows = ({ flows, onFlowClick }) => {\n    return (\n        <div className=\"row flows\">\n            <p>\n                Your Complex command should express at least one of the\n                following (click for help):\n            </p>\n            <div>\n                {flows.map((flow, i) => (\n                    <span\n                        className=\"flow\"\n                        key={i}\n                        data-id={flow}\n                        onClick={onFlowClick}\n                    >\n                        {flow}\n                    </span>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default RequestedFlows;\n","import React from 'react';\nimport App from '../../components/device/AppBox';\n\nconst ExcludedApps = ({ apps }) => {\n    return (\n        <div className=\"excluded-apps\">\n            <div className=\"row\">\n                <p>\n                    The following apps <b>should not</b> be used in your\n                    command:\n                </p>\n                <div className=\"row\">\n                    {apps.map((app, i) => (\n                        <div className=\"col-sm-3 app-container\" key={i}>\n                            <App appName={app['name']} appIcon={app['icon']} />\n                        </div>\n                    ))}\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default ExcludedApps;\n","import React from 'react';\n\nconst ExcludedTerms = ({ excludedTerms }) => {\n    return (\n        <div className=\"row excluded-terms\">\n            <p>\n                <b>Do not</b> use any of the following words and terms in your\n                command:\n            </p>\n            <div>\n                {excludedTerms.map((excludedTerm, i) => (\n                    <span className=\"excluded-term utterance-text\" key={i}>\n                        {excludedTerm}\n                    </span>\n                ))}\n            </div>\n        </div>\n    );\n};\n\nexport default ExcludedTerms;\n","const UtteranceInput = ({\n    utterance,\n    valid,\n    utteranceLimit,\n    errorMessage,\n    onInputChange,\n    onInputSubmit\n}) => {\n    return (\n        <div className=\"row utterance-input\">\n            <div className=\"container\">\n                <div className=\"card mt-4\">\n                    <div className=\"card-header\">\n                        <h3 className=\"text-center\">\n                            <span className=\"intent-icon bi bi-keyboard\" />\n                            Write here\n                        </h3>\n                    </div>\n                    <div className=\"card-body\">\n                        <div className=\"row\">\n                            <div className=\"col\">\n                                <form\n                                    className=\"g-3 needs-validation pt-1\"\n                                    onSubmit={onInputSubmit}\n                                    noValidate\n                                >\n                                    <div className=\"has-validation\">\n                                        <label\n                                            className=\"form-label\"\n                                            style={{\n                                                display: 'none'\n                                            }}\n                                        >\n                                            Write a complex command\n                                        </label>\n                                        <textarea\n                                            className={`input-textarea utterance-text form-control mb-3 ${\n                                                (valid === true &&\n                                                    'is-valid') ||\n                                                (valid === false &&\n                                                    'is-invalid')\n                                            }`}\n                                            rows=\"5\"\n                                            value={utterance}\n                                            type=\"text\"\n                                            id=\"utterance\"\n                                            aria-describedby=\"help\"\n                                            onChange={onInputChange}\n                                            placeholder=\"Type your complex command here...\"\n                                            required\n                                        ></textarea>\n                                        <div className=\"p-1 m-1\">\n                                            <span\n                                                className={\n                                                    (utterance || '').length >\n                                                    utteranceLimit\n                                                        ? 'text-danger'\n                                                        : ''\n                                                }\n                                            >\n                                                {(utterance || '').length}\n                                            </span>{' '}\n                                            / {utteranceLimit}\n                                        </div>\n                                        <div className=\"invalid-feedback\">\n                                            {errorMessage}\n                                        </div>\n                                    </div>\n                                </form>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n                <div>\n                    <p className=\"note\">\n                        Please make sure the Complex command you write flows\n                        naturally and that the different parts are relevant to\n                        one another.\n                    </p>\n                </div>\n            </div>\n        </div>\n    );\n};\n\nexport default UtteranceInput;\n","import React from 'react';\nimport AppModal from '../Modal';\nimport Device from '../../components/device/Device';\nimport Help from '../../components/help/Help';\nimport HelpFlows from '../../components/help/HelpFlows';\nimport { getApps } from '../../data/apps.js';\nimport { getTaskDescription } from '../../data/tasks';\nimport RephraseUtterances from './RephraseUtterances';\nimport RequestedFlows from './RequestedFlows';\nimport ExcludedApps from './ExcludedApps';\nimport ExcludedTerms from './ExcludedTerms';\nimport UtteranceInput from './UtteranceInput';\nimport './Utterance.scss';\n\nexport default class Utterance extends React.Component {\n    constructor(props) {\n        super(props);\n        const { utterance, context, excludedApps } = props;\n        this.state = {\n            utterance,\n            context: context,\n            apps: getApps(true, excludedApps)\n        };\n\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickHelp = this.handleClickHelp.bind(this);\n        this.handleClickHelpFlows = this.handleClickHelpFlows.bind(this);\n        this.handleTextAreaChange = this.handleTextAreaChange.bind(this);\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        if (prevProps.utterance !== this.props.utterance) {\n            let { utterance } = this.props;\n            utterance = utterance || '';\n            this.setState({ utterance });\n        }\n    }\n\n    handleTextAreaChange(event) {\n        const {\n            index,\n            utteranceLimit,\n            disableTextOverflow,\n            onUtteranceChange\n        } = this.props;\n        const { context } = this.state;\n        const utterance = event.target.value;\n        const newUtterance =\n            !disableTextOverflow || utterance.length <= utteranceLimit\n                ? utterance\n                : this.state.utterance || '';\n        this.setState({ utterance: newUtterance });\n        onUtteranceChange && onUtteranceChange(index, utterance, context);\n    }\n\n    isUtteranceValid() {\n        const {\n            conjunctionWords,\n            utteranceLimit,\n            excludedTerms,\n            rephraseUtterances\n        } = this.props;\n        const { utterance } = this.state;\n        const illegalTerms = ['Simple:', 'Complex:'];\n        const conjunctionWords2 = conjunctionWords.reduce(\n            (prevVal, w) => prevVal.concat(w['verification'] || [w['display']]),\n            []\n        );\n        const hasUtterance = Boolean(utterance && utterance.trim().length > 0);\n        const usedExamples = Boolean(\n            rephraseUtterances &&\n                rephraseUtterances.filter(\n                    (u) => u.toLowerCase() === utterance.trim().toLowerCase()\n                ).length > 0\n        );\n        const hasConjunctionWords = Boolean(\n            conjunctionWords2 && conjunctionWords2.length > 0\n        );\n        const conjunctionWordsIncluded =\n            hasUtterance &&\n            hasConjunctionWords &&\n            conjunctionWords2.filter((word) =>\n                new RegExp('\\\\b' + word + '\\\\b', 'i').test(utterance)\n            ).length > 0;\n        const excludedTermsFound =\n            excludedTerms &&\n            excludedTerms.length > 0 &&\n            excludedTerms.filter((term) =>\n                new RegExp('\\\\b' + term + '\\\\b', 'i').test(utterance)\n            );\n        const illegalTermsFound =\n            illegalTerms &&\n            illegalTerms.length > 0 &&\n            illegalTerms.filter((term) =>\n                new RegExp('\\\\b' + term + '\\\\b', 'i').test(utterance)\n            );\n\n        if (!hasUtterance || utterance.split(' ').length <= 2) {\n            // the utterance is too short\n            this.setState({\n                valid: false,\n                errorMessage: <span>Please be more creative.</span>\n            });\n            return false;\n        } else if (usedExamples) {\n            // the utterance was copied from the examples\n            this.setState({\n                valid: false,\n                errorMessage: (\n                    <span>\n                        Please read the instructions again. You just copied one\n                        of the examples.\n                    </span>\n                )\n            });\n            return false;\n        } else if (hasConjunctionWords && !conjunctionWordsIncluded) {\n            // none of the mandaroty conjunctionWords are included\n            this.setState({\n                valid: false,\n                errorMessage: (\n                    <span>\n                        Please use at least 1 of the following word:{' '}\n                        <strong>\n                            {conjunctionWords\n                                .map((w) => w['display'])\n                                .join(', ')}\n                        </strong>\n                        .\n                    </span>\n                )\n            });\n            return false;\n        } else if (\n            (utterance.indexOf('?') >= 0 &&\n                utterance.indexOf('?') < utterance.length * 0.5) ||\n            utterance\n                .trim()\n                .split('?')\n                .filter((s) => s.length > 0).length > 1\n        ) {\n            // the utterance has been phrased as multiple utterances\n            this.setState({\n                valid: false,\n                errorMessage: (\n                    <span>\n                        Please try to phrase the text as a{' '}\n                        <strong>single</strong> request (and not in multiple\n                        phrases).\n                    </span>\n                )\n            });\n            return false;\n        } else if (utterance.length > utteranceLimit) {\n            // the utterance is too long\n            this.setState({\n                valid: false,\n                errorMessage: <span>Your text is too long!</span>\n            });\n            return false;\n        } else if (\n            excludedTerms &&\n            excludedTerms.length > 0 &&\n            excludedTermsFound &&\n            excludedTermsFound.length > 0\n        ) {\n            // the utternace include excluded terms\n            this.setState({\n                valid: false,\n                errorMessage: (\n                    <span>\n                        Your text contains a term that should not be used:{' '}\n                        {excludedTermsFound.join(', ')}\n                    </span>\n                )\n            });\n        } else if (\n            illegalTerms &&\n            illegalTerms.length > 0 &&\n            illegalTermsFound &&\n            illegalTermsFound.length > 0\n        ) {\n            // the utternace include illegal terms (like part of a condition or an example)\n            this.setState({\n                valid: false,\n                errorMessage: (\n                    <span>\n                        You don't need to include the following term in your\n                        text: {illegalTerms.join(', ')}\n                    </span>\n                )\n            });\n        } else {\n            this.setState({ valid: true });\n            return true;\n        }\n    }\n\n    handleClickNext(event) {\n        event.preventDefault();\n\n        if (this.isUtteranceValid()) {\n            this.props.onClickNext();\n        }\n    }\n\n    handleClickHelp(event) {\n        this.setState({ showHelp: true });\n    }\n\n    handleClickHelpFlows(event) {\n        event.preventDefault();\n        const selectedFlow = event.target.getAttribute('data-id');\n        this.setState({ showHelpFlows: true, selectedFlow });\n    }\n\n    render() {\n        const {\n            rephraseUtterances,\n            utteranceLimit,\n            excludedTerms,\n            excludedApps,\n            flows,\n            showAppHelp,\n            mode,\n            onClickBack\n        } = this.props;\n        const {\n            utterance,\n            valid,\n            errorMessage,\n            showHelp,\n            showHelpFlows,\n            selectedFlow,\n            apps\n        } = this.state;\n        const taskDescription = getTaskDescription(mode);\n\n        if (showHelp) {\n            return (\n                <AppModal\n                    show={showHelp}\n                    onHide={() => this.setState({ showHelp: false })}\n                >\n                    <Help mode={mode} />\n                </AppModal>\n            );\n        }\n\n        if (showHelpFlows) {\n            return (\n                <AppModal\n                    show={showHelpFlows}\n                    onHide={() => this.setState({ showHelpFlows: false })}\n                >\n                    <HelpFlows flow={selectedFlow} />\n                </AppModal>\n            );\n        }\n\n        return (\n            <div className=\"utterance page px-4 py-5 my-5\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"header text-center\">\n                                <h1 className=\"text-center\">\n                                    <span className=\"title-small\">\n                                        Your task:\n                                    </span>\n                                    Write a Complex Command\n                                </h1>\n                                <div>{taskDescription}</div>\n                            </div>\n                        </div>\n                    </div>\n\n                    <div className=\"row body mt-3 mb-3\">\n                        <div className=\"col\">\n                            <Device showAppHelp={showAppHelp} apps={apps} />\n                        </div>\n                        <div className=\"col align-self-center\">\n                            {rephraseUtterances &&\n                                rephraseUtterances.length > 0 && (\n                                    <RephraseUtterances\n                                        rephraseUtterances={rephraseUtterances}\n                                        mode={mode}\n                                    />\n                                )}\n                            {flows && flows.length > 0 && (\n                                <RequestedFlows\n                                    flows={flows}\n                                    onFlowClick={this.handleClickHelpFlows}\n                                />\n                            )}\n\n                            {excludedTerms && excludedTerms.length > 0 && (\n                                <ExcludedTerms excludedTerms={excludedTerms} />\n                            )}\n\n                            {excludedApps && excludedApps.length > 0 && (\n                                <ExcludedApps\n                                    apps={getApps().filter(\n                                        (app) =>\n                                            excludedApps.indexOf(app['id']) !==\n                                            -1\n                                    )}\n                                />\n                            )}\n\n                            <UtteranceInput\n                                utterance={utterance}\n                                valid={valid}\n                                errorMessage={errorMessage}\n                                utteranceLimit={utteranceLimit}\n                                onInputChange={this.handleTextAreaChange}\n                                onInputSubmit={this.handleSubmit}\n                            />\n                        </div>\n                    </div>\n\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"actions bottom mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-outline-secondary btn-lg px-4 gap-3\"\n                                    onClick={onClickBack}\n                                >\n                                    <i className=\"bi bi-chevron-left\" />\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary btn-lg px-4\"\n                                    onClick={this.handleClickNext}\n                                >\n                                    <i className=\"bi bi-chevron-right\" />\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n\n                <div className=\"actions float\">\n                    <button\n                        type=\"button\"\n                        className=\"btn btn-outline-secondary btn-lg px-4 gap-3\"\n                        onClick={this.handleClickHelp}\n                    >\n                        <i className=\"bi bi-life-preserver\" />\n                        Help\n                    </button>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\nimport './Verification.scss';\n\nexport default class Complex extends React.Component {\n    constructor(props) {\n        super(props);\n        const { selectedFlows } = props;\n        this.state = {\n            errorMessage: '',\n            flows: ['Sequence', 'Condition', 'Multiplicity'],\n            selectedFlows: selectedFlows || []\n        };\n\n        this.handleClickFlow = this.handleClickFlow.bind(this);\n        this.handleClickNext = this.handleClickNext.bind(this);\n    }\n\n    handleClickFlow(e) {\n        e.preventDefault();\n        const { index, onClickFlow } = this.props;\n        const { selectedFlows } = this.state;\n        const selectedFlow = e.target.value;\n        if (selectedFlows.includes(selectedFlow)) {\n            const index = selectedFlows.indexOf(selectedFlow);\n            selectedFlows.splice(index, 1);\n        } else {\n            selectedFlows.push(selectedFlow);\n        }\n\n        this.setState({ selectedFlows, errorMessage: '' });\n        onClickFlow(index, selectedFlows);\n    }\n\n    handleClickNext(e) {\n        e.preventDefault();\n        const { selectedFlows } = this.state;\n        if (selectedFlows.length === 0) {\n            this.setState({\n                errorMessage:\n                    'If your command does not include any sequence, condition, or multiplicity statements, please go back and revise your command.'\n            });\n            return;\n        } else {\n            this.setState({ errorMessage: '' });\n            this.props.onClickNext();\n        }\n    }\n\n    render() {\n        const { utterance, onClickBack } = this.props;\n        const { flows, selectedFlows, errorMessage } = this.state;\n\n        return (\n            <div className=\"verification page\">\n                <div className=\"container\">\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"header text-center\">\n                                <h1 className=\"text-center\">\n                                    Verify Complex Command\n                                </h1>\n                                <div>\n                                    <p>\n                                        A Complex command should express\n                                        Sequence, Condition, or Multiplicity.\n                                        Verify that the Complex command you\n                                        wrote is indeed expressing one or more\n                                        of these.\n                                    </p>\n                                </div>\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row body mb-3\">\n                        <div className=\"col\">\n                            <div className=\"utterance\">\n                                <div className=\"utterance-text text-center\">\n                                    {utterance}\n                                </div>\n                            </div>\n                        </div>\n                        <div className=\"col\">\n                            <p>\n                                Select any of the following that is expressed in\n                                the Complex command you wrote:\n                            </p>\n                            <div className=\"flows row\">\n                                {flows.map((flow, i) => (\n                                    <div\n                                        className=\"col-md-4 col-sm flow-btn-container\"\n                                        key={i}\n                                    >\n                                        <button\n                                            className={`flow-btn btn btn-link ${\n                                                selectedFlows.indexOf(flow) >= 0\n                                                    ? 'selected'\n                                                    : ''\n                                            }`}\n                                            value={flow}\n                                            onClick={this.handleClickFlow}\n                                        >\n                                            {flow}\n                                        </button>\n                                    </div>\n                                ))}\n                            </div>\n                            <div className=\"text-danger mt-3\">\n                                {errorMessage}\n                            </div>\n                        </div>\n                    </div>\n                    <div className=\"row mb-3\">\n                        <div className=\"col\">\n                            <div className=\"actions bottom mt-4 mb-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-outline-secondary btn-lg px-4 gap-3\"\n                                    onClick={onClickBack}\n                                >\n                                    <i className=\"bi bi-chevron-left\" />\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary btn-lg px-4\"\n                                    onClick={this.handleClickNext}\n                                >\n                                    <i className=\"bi bi-chevron-right\" />\n                                </button>\n                            </div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n","import React from 'react';\n\nclass Selections extends React.Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            feedback: \"\"\n        };\n\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleClickBack = this.handleClickBack.bind(this);\n        this.handleTextAreaChange = this.handleTextAreaChange.bind(this);\n    }\n\n    handleTextAreaChange(event) {\n        const { onFeedbackChange } = this.props;\n        const feedback = event.target.value;\n        this.setState({ feedback });\n        onFeedbackChange && onFeedbackChange(feedback);\n    }\n\n    handleSubmit(event) {\n        event.preventDefault();\n        const { feedback } = this.state;\n        this.props.onSubmit(feedback);\n    }\n\n    handleClickBack(event) {\n        event.preventDefault();\n        this.props.onClickBack();\n    }\n\n    render() {\n        const { feedback } = this.state;\n\n        return (\n            <div className=\"thank-you\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <h2 className=\"text-muted text-center mb-3\">Thank You.</h2>\n                        </div>\n                    </div>\n\n                    <div className=\"row mt-3 mb-3\">\n                        <div className=\"col\">\n                            <div className=\"card mt-4\">\n                                <div className=\"card-header\">\n                                    <h4 className=\"text-center\"><span className=\"intent-icon bi bi-megaphone\" />Have any feedback?</h4>\n                                </div>\n                                <div className=\"card-body\">\n                                    <div className=\"row\">\n                                        <div className=\"col\">\n                                            <form className=\"g-3 needs-validation pt-1\" onSubmit={this.handleSubmit} noValidate>\n                                                <div className=\"has-validation\">\n                                                    <textarea className=\"feedback-textarea form-control mb-3\"\n                                                        rows=\"3\" value={feedback} type=\"text\" id=\"feedback-text\" aria-describedby=\"help\"\n                                                        onChange={this.handleTextAreaChange} placeholder=\"Enter your feedback here...\" required>\n                                                    </textarea>\n                                                </div>\n                                            </form>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div >\n                        </div>\n                    </div>\n\n                    <div className=\"row\">\n                        <div className=\"col\">\n                            <div className=\"mt-4 d-grid gap-2 d-sm-flex justify-content-sm-center\">\n                                <button type=\"button\" className=\"btn btn-outline-secondary btn-lg px-4 gap-3\" onClick={this.handleClickBack}><i className=\"bi bi-chevron-left\" /></button>\n                                <button type=\"button\" className=\"btn btn-primary btn-lg px-4\" onClick={this.handleSubmit}>Finish</button>\n                            </div>\n                        </div>\n                    </div>\n\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Selections;","import React from 'react';\nimport Home from './containers/home/Home';\nimport Instructions from './containers/instructions/Instructions';\nimport Simple from './containers/simple/Simple';\nimport Complex from './containers/complex/Complex';\nimport Utterance from './containers/utterance/Utterance';\nimport Verification from './containers/verification/Verification';\nimport ThankYou from './containers/ThankYou';\nimport './App.scss';\n\nconst SCREENS = {\n    home: 1,\n    simple: 2,\n    complex: 3,\n    instructions: 4,\n    utterance: 5,\n    verification: 6,\n    end: 7\n};\n\nexport default class App extends React.Component {\n    constructor(props) {\n        super(props);\n        const { intents, constraints } = props;\n        this.state = {\n            index: 0,\n            currentScreen: SCREENS.home,\n            intentsSelections: intents && new Array(intents.length),\n            constraintsSelections: constraints && new Array(constraints.length),\n            workerResponses: []\n        };\n\n        this.handleClickBack = this.handleClickBack.bind(this);\n        this.handleClickNext = this.handleClickNext.bind(this);\n        this.handleClickHelp = this.handleClickHelp.bind(this);\n        this.handleClickFlow = this.handleClickFlow.bind(this);\n        this.handleFeedbackChange = this.handleFeedbackChange.bind(this);\n        this.handleUtteranceChange = this.handleUtteranceChange.bind(this);\n        this.handleSelectIntent = this.handleSelectIntent.bind(this);\n        this.handleSelectConstraint = this.handleSelectConstraint.bind(this);\n        this.handleSelection = this.handleSelection.bind(this);\n    }\n\n    submitToMTurk() {\n        const { intents, constraints, excludedApps, excludedTerms, flows, id } =\n            this.props;\n        const { workerResponses, feedback } = this.state;\n        const workerResponsesValues = [];\n        for (const i in workerResponses) {\n            const workerResponse = workerResponses[i];\n            const {\n                utterance,\n                context,\n                selectedFlows,\n                selectedIntents,\n                selectedConstraints,\n                intentsSelections,\n                constraintsSelections\n            } = workerResponse;\n            const intentsValue =\n                selectedIntents &&\n                selectedIntents.map((index) => intents[index]).join(' | ');\n            const constraintsValue =\n                selectedConstraints &&\n                selectedConstraints\n                    .map((index) => constraints[index])\n                    .join(' | ');\n            const intentsAnnotationsValue =\n                selectedIntents &&\n                selectedIntents\n                    .map((index, i) =>\n                        utterance.substring(\n                            intentsSelections[i][0],\n                            intentsSelections[i][1]\n                        )\n                    )\n                    .join(' | ');\n            const constraintsAnnotationsValue =\n                selectedConstraints &&\n                selectedConstraints\n                    .map((index, i) =>\n                        utterance.substring(\n                            constraintsSelections[i][0],\n                            constraintsSelections[i][1]\n                        )\n                    )\n                    .join(' | ');\n            const workerResponseValue = {\n                id,\n                utterance,\n                context,\n                excludedTerms,\n                excludedApps,\n                flows,\n                selectedFlows,\n                intents: intentsValue,\n                constraints: constraintsValue,\n                intentsAnnotations: intentsAnnotationsValue,\n                constraintsAnnotations: constraintsAnnotationsValue\n            };\n            workerResponsesValues.push(workerResponseValue);\n        }\n        const feedbackValue = feedback;\n\n        document.querySelector('crowd-form').onsubmit = () => {\n            if (document.getElementById('worker-responses')) {\n                document.getElementById('worker-responses').value =\n                    JSON.stringify(workerResponsesValues);\n                document.getElementById('worker-feedback').value =\n                    feedbackValue;\n            }\n        };\n        document.querySelector('crowd-form').submit();\n    }\n\n    handleClickNext() {\n        const { currentScreen } = this.state;\n\n        if (currentScreen === SCREENS.end) {\n            this.submitToMTurk(this.state);\n        } else {\n            const nextScreen = currentScreen + 1;\n            this.setState({ currentScreen: nextScreen });\n        }\n        window.scrollTo(0, 0);\n    }\n\n    handleClickBack() {\n        const { currentScreen } = this.state;\n\n        if (currentScreen !== SCREENS.home) {\n            const nextScreen = currentScreen - 1;\n            this.setState({ currentScreen: nextScreen });\n        }\n        window.scrollTo(0, 0);\n    }\n\n    handleClickHelp() {\n        this.setState({ showHelp: true });\n    }\n\n    handleFeedbackChange(feedback) {\n        this.setState({ feedback });\n    }\n\n    handleUtteranceChange(index, utterance, context) {\n        const { workerResponses } = this.state;\n        workerResponses[index] = {\n            ...workerResponses[index],\n            ...{\n                utterance,\n                context,\n                intentsSelections: [],\n                constraintsSelections: []\n            }\n        };\n        this.setState({ workerResponses });\n    }\n\n    handleClickFlow(index, selectedFlows) {\n        const { workerResponses } = this.state;\n        workerResponses[index] = {\n            ...workerResponses[index],\n            ...{ selectedFlows }\n        };\n        this.setState({ workerResponses });\n    }\n\n    handleSelectIntent(index, itemsCounter) {\n        const { workerResponses } = this.state;\n        workerResponses[index] = {\n            ...workerResponses[index],\n            ...{ selectedIntents: itemsCounter, intentsSelections: [] }\n        };\n        this.setState({ workerResponses });\n    }\n\n    handleSelectConstraint(index, itemsCounter) {\n        const { workerResponses } = this.state;\n        workerResponses[index] = {\n            ...workerResponses[index],\n            ...{ selectedConstraints: itemsCounter, constraintsSelections: [] }\n        };\n        this.setState({ workerResponses });\n    }\n\n    handleSelection(\n        index,\n        intentsSelections,\n        constraintsSelections,\n        currentSelectionIndex\n    ) {\n        const { workerResponses } = this.state;\n        workerResponses[index] = {\n            ...workerResponses[index],\n            ...{\n                intentsSelections,\n                constraintsSelections,\n                currentSelectionIndex\n            }\n        };\n        this.setState({ workerResponses });\n    }\n\n    /**\n     * Test variations:\n     * control: examples + explicit flow description\n     * A: explicit flow description\n     * B: n/a\n     * C: examples + explicit flow description + click apps\n     * D: explicit flow description + click apps\n     * @returns\n     */\n    getDisplayedScreen() {\n        const {\n            maxUtterances,\n            maxLength,\n            minIntents,\n            minConstraints,\n            conjunctionWords,\n            minConjunctionWords,\n            excludedTerms,\n            excludedApps,\n            flows,\n            showExamples,\n            showAppHelp,\n            mode,\n            rephraseUtterances\n        } = this.props;\n        const { currentScreen, index, workerResponses } = this.state;\n        const { utterance, context, selectedFlows } =\n            workerResponses.length > index ? workerResponses[index] : {};\n        const utteranceLimit = maxLength || 250;\n        const minimalDescription = false; //testVariation === 'B' || testVariation === 'D';\n\n        if (currentScreen === SCREENS.home) {\n            return (\n                <Home\n                    onClickExample={this.handleClickHelp}\n                    onClickSkip={this.handleClickNext}\n                />\n            );\n        } else if (currentScreen === SCREENS.simple) {\n            return (\n                <Simple\n                    showExamples={showExamples}\n                    showAppHelp={showAppHelp}\n                    excludedApps={excludedApps}\n                    onClickBack={this.handleClickBack}\n                    onClickNext={this.handleClickNext}\n                />\n            );\n        } else if (currentScreen === SCREENS.complex) {\n            return (\n                <Complex\n                    minimalDescription={minimalDescription}\n                    showExamples={showExamples}\n                    excludedApps={excludedApps}\n                    showAppHelp={showAppHelp}\n                    onClickBack={this.handleClickBack}\n                    onClickNext={this.handleClickNext}\n                />\n            );\n        } else if (currentScreen === SCREENS.instructions) {\n            return (\n                <Instructions\n                    mode={mode}\n                    onClickBack={this.handleClickBack}\n                    onClickNext={this.handleClickNext}\n                />\n            );\n        } else if (currentScreen === SCREENS.utterance) {\n            return (\n                <Utterance\n                    index={index}\n                    maxUtterances={maxUtterances}\n                    utterance={utterance}\n                    utteranceLimit={utteranceLimit}\n                    minIntents={minIntents}\n                    minConstraints={minConstraints}\n                    showAppHelp={showAppHelp}\n                    excludedTerms={excludedTerms}\n                    flows={flows}\n                    conjunctionWords={conjunctionWords}\n                    minConjunctionWords={minConjunctionWords}\n                    context={context}\n                    excludedApps={excludedApps}\n                    mode={mode}\n                    rephraseUtterances={rephraseUtterances}\n                    onUtteranceChange={this.handleUtteranceChange}\n                    onClickBack={this.handleClickBack}\n                    onClickHelp={this.handleClickHelp}\n                    onClickNext={this.handleClickNext}\n                />\n            );\n        } else if (currentScreen === SCREENS.verification) {\n            return (\n                <Verification\n                    index={index}\n                    utterance={utterance}\n                    selectedFlows={selectedFlows}\n                    onClickFlow={this.handleClickFlow}\n                    onClickBack={this.handleClickBack}\n                    onClickNext={this.handleClickNext}\n                />\n            );\n        } else if (currentScreen === SCREENS.end) {\n            return (\n                <ThankYou\n                    onFeedbackChange={this.handleFeedbackChange}\n                    onSubmit={this.handleClickNext}\n                    onClickBack={this.handleClickBack}\n                />\n            );\n        }\n    }\n\n    render() {\n        const displayedScreen = this.getDisplayedScreen();\n        return (\n            <div className=\"app\">\n                <div className=\"container\">\n                    <main>{displayedScreen}</main>\n                </div>\n            </div>\n        );\n    }\n}\n","import App from './App';\nimport './App.scss';\n\nconst getData = (attribute, defaultValue = null, options = {}) => {\n    const defaultOptions = {\n        id: 'root',\n        trim: true,\n        splitDelimiter: null,\n        callbackFn: null,\n        shuffle: false\n    };\n    options = { ...defaultOptions, ...options };\n\n    const { id, delimiter, trim, callbackFn, shuffle } = options;\n    let value = document.getElementById(id).getAttribute(attribute);\n    if (value && delimiter) {\n        value = value\n            .split(delimiter)\n            .filter((v) => v.trim().length > 0)\n            .map((v) => (trim ? v.trim() : v))\n            .map((v) => (callbackFn ? callbackFn(v) : v));\n        if (shuffle) {\n            value = value.sort(() => Math.random() - 0.5);\n        }\n        value = value.length > 0 ? value : null;\n    } else if (value && callbackFn) {\n        value = callbackFn(value);\n    }\n    return value || defaultValue;\n};\n\nconst id = getData('data-id');\nconst maxUtterances = getData('data-max-utterances')\n    ? parseInt(getData('data-max-utterances'))\n    : 1;\nconst minIntents =\n    getData('data-min-intents') && parseInt(getData('data-min-intents'));\nconst conjunctionWords = getData('data-conjunction-words', [], '|', (word) => ({\n    display: word.trim().split(':')[0],\n    verification: word.trim().split(':')[1].split(',')\n}));\nconst minConjunctionWords =\n    getData('min-conjunction-words') &&\n    parseInt(getData('min-conjunction-words'));\nconst quantifiers = getData('data-quantifiers', [], { delimiter: '|' });\nconst excludedTerms = getData('data-excluded-terms', [], { delimiter: '|' });\nconst flows = getData('data-flows', [], { delimiter: '|' });\nconst excludedApps = getData('data-excluded-apps', [], { delimiter: '|' });\nconst maxLength = parseInt(getData('data-max-length'));\nconst quantifierIdx = null;\nconst showExamples = Boolean(getData('data-show-examples', true));\nconst showAppHelp = Boolean(getData('data-show-app-help', true));\nconst mode = getData('data-mode');\nconst rephraseUtterances = getData('data-rephrase-utterances', [], {\n    delimiter: '|||',\n    shuffle: true\n});\n\nconst Root = () => {\n    return (\n        <div className=\"utterances\">\n            <App\n                id={id}\n                maxUtterances={maxUtterances}\n                minIntents={minIntents}\n                conjunctionWords={conjunctionWords}\n                minConjunctionWords={minConjunctionWords}\n                quantifiers={quantifiers}\n                quantifierIdx={quantifierIdx}\n                excludedApps={excludedApps}\n                maxLength={maxLength}\n                showExamples={showExamples}\n                showAppHelp={showAppHelp}\n                flows={flows}\n                excludedTerms={excludedTerms}\n                mode={mode}\n                rephraseUtterances={rephraseUtterances}\n            />\n        </div>\n    );\n};\n\nexport default Root;\n"],"names":["Home","onClickSkip","this","props","className","type","onClick","React","getTaskDescription","mode","Examples","caption","apps","app","find","a","examples","interval","Carousel","variant","map","example","i","getIcon","Instructions","title","desc","complexOrig","complexNew","simple","complex","getExamples","getTitle","requirements","getRequirments","taskDescription","requirement","onClickNext","onClickBack","appName","appIcon","Device","state","selectAppIndex","handleClickApp","bind","handleCloseApp","e","preventDefault","showAppHelp","index","parseInt","currentTarget","getAttribute","setState","appsInRow","html","length","push","disableClickApps","renderAppsGrid","renderShowApp","shuffleArray","array","counter","Math","floor","random","temp","getApps","shuffle","excludedApps","limit","id","name","icon","about","results","filter","indexOf","slice","Command","description","hasExamples","Boolean","Simple","showExamples","getDescription","MyVerticallyCenteredModal","Modal","size","animation","centered","children","Button","onHide","AppModal","show","HelpFlows","flow","toLowerCase","Complex","showHelpFlows","handleClickHelpFlows","minimalDescription","event","selectedFlow","target","rephraseUtterances","instruction","numOfRephrasedUtterances","getInstruction","u","flows","onFlowClick","excludedTerms","excludedTerm","utterance","valid","utteranceLimit","errorMessage","onInputChange","onInputSubmit","onSubmit","noValidate","style","display","rows","value","onChange","placeholder","required","Utterance","context","handleClickNext","handleClickHelp","handleTextAreaChange","prevProps","prevState","disableTextOverflow","onUtteranceChange","newUtterance","conjunctionWords","illegalTerms","conjunctionWords2","reduce","prevVal","w","concat","hasUtterance","trim","usedExamples","hasConjunctionWords","conjunctionWordsIncluded","word","RegExp","test","excludedTermsFound","term","illegalTermsFound","split","join","s","isUtteranceValid","showHelp","handleSubmit","selectedFlows","handleClickFlow","onClickFlow","includes","splice","feedback","handleClickBack","onFeedbackChange","SCREENS","App","intents","constraints","currentScreen","intentsSelections","Array","constraintsSelections","workerResponses","handleFeedbackChange","handleUtteranceChange","handleSelectIntent","handleSelectConstraint","handleSelection","workerResponsesValues","workerResponse","selectedIntents","selectedConstraints","intentsValue","constraintsValue","intentsAnnotationsValue","substring","constraintsAnnotationsValue","workerResponseValue","intentsAnnotations","constraintsAnnotations","feedbackValue","document","querySelector","onsubmit","getElementById","JSON","stringify","submit","submitToMTurk","nextScreen","window","scrollTo","itemsCounter","currentSelectionIndex","maxUtterances","maxLength","minIntents","minConstraints","minConjunctionWords","onClickExample","onClickHelp","ThankYou","displayedScreen","getDisplayedScreen","getData","attribute","defaultValue","options","defaultOptions","splitDelimiter","callbackFn","delimiter","v","sort","verification","quantifiers","quantifierIdx"],"sourceRoot":""}